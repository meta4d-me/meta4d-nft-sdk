/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { M4mComponent, M4mComponentInterface } from "../M4mComponent";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "PreparedComponent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOperator",
        type: "address",
      },
    ],
    name: "SetOperator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "operator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "prepareNewToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "base",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOperator",
        type: "address",
      },
    ],
    name: "setOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612b4f806100206000396000f3fe608060405234801561001057600080fd5b50600436106101715760003560e01c80636c0360eb116100de578063bd85b03911610097578063e985e9c511610071578063e985e9c514610355578063f242432a14610391578063f2fde38b146103a4578063f5298aca146103b757600080fd5b8063bd85b0391461030f578063c4d66de81461032f578063d81d0a151461034257600080fd5b80636c0360eb146102b5578063715018a6146102bd5780637b103999146102c55780638da5cb5b146102d8578063a22cb465146102e9578063b3ab15fb146102fc57600080fd5b80632eb2c2d6116101305780632eb2c2d61461021e5780634e1273f4146102315780634e41a1fb1461025157806355f804b314610264578063570ca735146102775780636b20c454146102a257600080fd5b8062ad800c14610176578062fdd58e1461019f57806301ffc9a7146101c05780630577486d146101e35780630e89341c146101f8578063156e29f61461020b575b600080fd5b610189610184366004611ea7565b6103ca565b6040516101969190611f18565b60405180910390f35b6101b26101ad366004611f47565b610464565b604051908152602001610196565b6101d36101ce366004611f87565b6104fc565b6040519015158152602001610196565b6101f66101f1366004612059565b61054e565b005b610189610206366004611ea7565b610670565b6101f66102193660046120c5565b6106ae565b6101f661022c36600461218c565b610746565b61024461023f366004612235565b610792565b604051610196919061233a565b61018961025f366004611ea7565b6108bb565b6101f661027236600461234d565b6108d4565b60cd5461028a906001600160a01b031681565b6040516001600160a01b039091168152602001610196565b6101f66102b0366004612381565b610947565b610189610a34565b6101f6610a41565b60cc5461028a906001600160a01b031681565b6097546001600160a01b031661028a565b6101f66102f73660046123ea565b610a55565b6101f661030a366004612426565b610a60565b6101b261031d366004611ea7565b60cb6020526000908152604090205481565b6101f661033d366004612426565b610abc565b6101f6610350366004612381565b610c00565b6101d3610363366004612441565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205460ff1690565b6101f661039f366004612474565b610d01565b6101f66103b2366004612426565b610d46565b6101f66103c53660046120c5565b610dbf565b60c960205260009081526040902080546103e3906124d8565b80601f016020809104026020016040519081016040528092919081815260200182805461040f906124d8565b801561045c5780601f106104315761010080835404028352916020019161045c565b820191906000526020600020905b81548152906001019060200180831161043f57829003601f168201915b505050505081565b60006001600160a01b0383166104d45760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b5060009081526065602090815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061052d57506001600160e01b031982166303a24d0760e21b145b8061054857506301ffc9a760e01b6001600160e01b03198316145b92915050565b6097546001600160a01b0316331480610571575060cd546001600160a01b031633145b6105aa5760405162461bcd60e51b815260206004820152600a60248201526934b6361031b0b63632b960b11b60448201526064016104cb565b600083815260cb6020526040902054156105f05760405162461bcd60e51b8152602060048201526007602482015266195e1a5cdd195960ca1b60448201526064016104cb565b600083815260c960209081526040909120835161060f92850190611e0e565b50600083815260ca60209081526040909120825161062f92840190611e0e565b507fd5deb8fdbdcf78ecffe3f736c647adb13f1fdfedcba2fb2243fabefef0b3955283838360405161066393929190612513565b60405180910390a1505050565b606060ce61067d30610e56565b61068684610eb2565b60405160200161069893929190612564565b6040516020818303038152906040529050919050565b60cc546001600160a01b031633146106f85760405162461bcd60e51b815260206004820152600d60248201526c6f6e6c7920726567697374727960981b60448201526064016104cb565b61070182610faf565b600082815260cb60205260408120805483929061071f908490612631565b9250508190555061074183838360405180602001604052806000815250611083565b505050565b6001600160a01b03851633148061076257506107628533610363565b61077e5760405162461bcd60e51b81526004016104cb90612649565b61078b858585858561115f565b5050505050565b606081518351146107f75760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016104cb565b600083516001600160401b0381111561081257610812611fa4565b60405190808252806020026020018201604052801561083b578160200160208202803683370190505b50905060005b84518110156108b35761088685828151811061085f5761085f612698565b602002602001015185838151811061087957610879612698565b6020026020010151610464565b82828151811061089857610898612698565b60209081029190910101526108ac816126ae565b9050610841565b509392505050565b60ca60205260009081526040902080546103e3906124d8565b6097546001600160a01b03163314806108f7575060cd546001600160a01b031633145b6109305760405162461bcd60e51b815260206004820152600a60248201526934b6361031b0b63632b960b11b60448201526064016104cb565b80516109439060ce906020840190611e0e565b5050565b6001600160a01b03831633148061096357506109638333610363565b6109af5760405162461bcd60e51b815260206004820181905260248201527f63616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656460448201526064016104cb565b60005b8151811015610a28578181815181106109cd576109cd612698565b602002602001015160cb60008584815181106109eb576109eb612698565b602002602001015181526020019081526020016000206000828254610a1091906126c9565b90915550819050610a20816126ae565b9150506109b2565b506107418383836112fe565b60ce80546103e3906124d8565b610a4961148d565b610a5360006114e7565b565b610943338383611539565b610a6861148d565b60cd80546001600160a01b0319166001600160a01b0383169081179091556040519081527fdbebfba65bd6398fb722063efc10c99f624f9cd8ba657201056af918a676d5ee9060200160405180910390a150565b600054610100900460ff1615808015610adc5750600054600160ff909116105b80610af65750303b158015610af6575060005460ff166001145b610b595760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016104cb565b6000805460ff191660011790558015610b7c576000805461ff0019166101001790555b610b946040518060200160405280600081525061161a565b610b9c61164a565b60cc80546001600160a01b0319166001600160a01b0384161790558015610943576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b60cc546001600160a01b03163314610c4a5760405162461bcd60e51b815260206004820152600d60248201526c6f6e6c7920726567697374727960981b60448201526064016104cb565b60005b8251811015610ce557610c78838281518110610c6b57610c6b612698565b6020026020010151610faf565b818181518110610c8a57610c8a612698565b602002602001015160cb6000858481518110610ca857610ca8612698565b602002602001015181526020019081526020016000206000828254610ccd9190612631565b90915550819050610cdd816126ae565b915050610c4d565b506107418383836040518060200160405280600081525061167a565b6001600160a01b038516331480610d1d5750610d1d8533610363565b610d395760405162461bcd60e51b81526004016104cb90612649565b61078b85858585856117c6565b610d4e61148d565b6001600160a01b038116610db35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104cb565b610dbc816114e7565b50565b6001600160a01b038316331480610ddb5750610ddb8333610363565b610e275760405162461bcd60e51b815260206004820181905260248201527f63616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656460448201526064016104cb565b600082815260cb602052604081208054839290610e459084906126c9565b9091555061074190508383836118f4565b606081610e7d5750506040805180820190915260048152630307830360e41b602082015290565b8160005b8115610ea05780610e91816126ae565b915050600882901c9150610e81565b610eaa84826119fb565b949350505050565b606081610ed65750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610f005780610eea816126ae565b9150610ef99050600a836126f6565b9150610eda565b6000816001600160401b03811115610f1a57610f1a611fa4565b6040519080825280601f01601f191660200182016040528015610f44576020820181803683370190505b5090505b8415610eaa57610f596001836126c9565b9150610f66600a8661270a565b610f71906030612631565b60f81b818381518110610f8657610f86612698565b60200101906001600160f81b031916908160001a905350610fa8600a866126f6565b9450610f48565b600081815260c9602052604081208054610fc8906124d8565b80601f0160208091040260200160405190810160405280929190818152602001828054610ff4906124d8565b80156110415780601f1061101657610100808354040283529160200191611041565b820191906000526020600020905b81548152906001019060200180831161102457829003601f168201915b5050505050905060008151116109435760405162461bcd60e51b815260206004820152600760248201526637379030ba3a3960c91b60448201526064016104cb565b6001600160a01b0384166110a95760405162461bcd60e51b81526004016104cb9061271e565b3360006110b585611b9d565b905060006110c285611b9d565b905060008681526065602090815260408083206001600160a01b038b168452909152812080548792906110f6908490612631565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461115683600089898989611be8565b50505050505050565b81518351146111805760405162461bcd60e51b81526004016104cb9061275f565b6001600160a01b0384166111a65760405162461bcd60e51b81526004016104cb906127a7565b3360005b84518110156112905760008582815181106111c7576111c7612698565b6020026020010151905060008583815181106111e5576111e5612698565b60209081029190910181015160008481526065835260408082206001600160a01b038e1683529093529190912054909150818110156112365760405162461bcd60e51b81526004016104cb906127ec565b60008381526065602090815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290611275908490612631565b9250508190555050505080611289906126ae565b90506111aa565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516112e0929190612836565b60405180910390a46112f6818787878787611d44565b505050505050565b6001600160a01b0383166113245760405162461bcd60e51b81526004016104cb90612864565b80518251146113455760405162461bcd60e51b81526004016104cb9061275f565b604080516020810190915260009081905233905b835181101561141e57600084828151811061137657611376612698565b60200260200101519050600084838151811061139457611394612698565b60209081029190910181015160008481526065835260408082206001600160a01b038c1683529093529190912054909150818110156113e55760405162461bcd60e51b81526004016104cb906128a7565b60009283526065602090815260408085206001600160a01b038b1686529091529092209103905580611416816126ae565b915050611359565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb868660405161146f929190612836565b60405180910390a46040805160208101909152600090525b50505050565b6097546001600160a01b03163314610a535760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104cb565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031614156115ad5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016104cb565b6001600160a01b03838116600081815260666020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b600054610100900460ff166116415760405162461bcd60e51b81526004016104cb906128eb565b610dbc81611dff565b600054610100900460ff166116715760405162461bcd60e51b81526004016104cb906128eb565b610a53336114e7565b6001600160a01b0384166116a05760405162461bcd60e51b81526004016104cb9061271e565b81518351146116c15760405162461bcd60e51b81526004016104cb9061275f565b3360005b845181101561175e578381815181106116e0576116e0612698565b6020026020010151606560008784815181106116fe576116fe612698565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b0316815260200190815260200160002060008282546117469190612631565b90915550819050611756816126ae565b9150506116c5565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516117af929190612836565b60405180910390a461078b81600087878787611d44565b6001600160a01b0384166117ec5760405162461bcd60e51b81526004016104cb906127a7565b3360006117f885611b9d565b9050600061180585611b9d565b905060008681526065602090815260408083206001600160a01b038c1684529091529020548581101561184a5760405162461bcd60e51b81526004016104cb906127ec565b60008781526065602090815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290611889908490612631565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46118e9848a8a8a8a8a611be8565b505050505050505050565b6001600160a01b03831661191a5760405162461bcd60e51b81526004016104cb90612864565b33600061192684611b9d565b9050600061193384611b9d565b6040805160208082018352600091829052888252606581528282206001600160a01b038b16835290522054909150848110156119815760405162461bcd60e51b81526004016104cb906128a7565b60008681526065602090815260408083206001600160a01b038b81168086529184528285208a8703905582518b81529384018a90529092908816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4604080516020810190915260009052611156565b60606000611a0a836002612936565b611a15906002612631565b6001600160401b03811115611a2c57611a2c611fa4565b6040519080825280601f01601f191660200182016040528015611a56576020820181803683370190505b509050600360fc1b81600081518110611a7157611a71612698565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611aa057611aa0612698565b60200101906001600160f81b031916908160001a9053506000611ac4846002612936565b611acf906001612631565b90505b6001811115611b47576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611b0357611b03612698565b1a60f81b828281518110611b1957611b19612698565b60200101906001600160f81b031916908160001a90535060049490941c93611b4081612955565b9050611ad2565b508315611b965760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016104cb565b9392505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611bd757611bd7612698565b602090810291909101015292915050565b6001600160a01b0384163b156112f65760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190611c2c908990899088908890889060040161296c565b6020604051808303816000875af1925050508015611c67575060408051601f3d908101601f19168201909252611c64918101906129b1565b60015b611d1457611c736129ce565b806308c379a01415611cad5750611c886129ea565b80611c935750611caf565b8060405162461bcd60e51b81526004016104cb9190611f18565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016104cb565b6001600160e01b0319811663f23a6e6160e01b146111565760405162461bcd60e51b81526004016104cb90612a73565b6001600160a01b0384163b156112f65760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190611d889089908990889088908890600401612abb565b6020604051808303816000875af1925050508015611dc3575060408051601f3d908101601f19168201909252611dc0918101906129b1565b60015b611dcf57611c736129ce565b6001600160e01b0319811663bc197c8160e01b146111565760405162461bcd60e51b81526004016104cb90612a73565b80516109439060679060208401905b828054611e1a906124d8565b90600052602060002090601f016020900481019282611e3c5760008555611e82565b82601f10611e5557805160ff1916838001178555611e82565b82800160010185558215611e82579182015b82811115611e82578251825591602001919060010190611e67565b50611e8e929150611e92565b5090565b5b80821115611e8e5760008155600101611e93565b600060208284031215611eb957600080fd5b5035919050565b60005b83811015611edb578181015183820152602001611ec3565b838111156114875750506000910152565b60008151808452611f04816020860160208601611ec0565b601f01601f19169290920160200192915050565b602081526000611b966020830184611eec565b80356001600160a01b0381168114611f4257600080fd5b919050565b60008060408385031215611f5a57600080fd5b611f6383611f2b565b946020939093013593505050565b6001600160e01b031981168114610dbc57600080fd5b600060208284031215611f9957600080fd5b8135611b9681611f71565b634e487b7160e01b600052604160045260246000fd5b601f8201601f191681016001600160401b0381118282101715611fdf57611fdf611fa4565b6040525050565b600082601f830112611ff757600080fd5b81356001600160401b0381111561201057612010611fa4565b604051612027601f8301601f191660200182611fba565b81815284602083860101111561203c57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561206e57600080fd5b8335925060208401356001600160401b038082111561208c57600080fd5b61209887838801611fe6565b935060408601359150808211156120ae57600080fd5b506120bb86828701611fe6565b9150509250925092565b6000806000606084860312156120da57600080fd5b6120e384611f2b565b95602085013595506040909401359392505050565b60006001600160401b0382111561211157612111611fa4565b5060051b60200190565b600082601f83011261212c57600080fd5b81356020612139826120f8565b6040516121468282611fba565b83815260059390931b850182019282810191508684111561216657600080fd5b8286015b84811015612181578035835291830191830161216a565b509695505050505050565b600080600080600060a086880312156121a457600080fd5b6121ad86611f2b565b94506121bb60208701611f2b565b935060408601356001600160401b03808211156121d757600080fd5b6121e389838a0161211b565b945060608801359150808211156121f957600080fd5b61220589838a0161211b565b9350608088013591508082111561221b57600080fd5b5061222888828901611fe6565b9150509295509295909350565b6000806040838503121561224857600080fd5b82356001600160401b038082111561225f57600080fd5b818501915085601f83011261227357600080fd5b81356020612280826120f8565b60405161228d8282611fba565b83815260059390931b85018201928281019150898411156122ad57600080fd5b948201945b838610156122d2576122c386611f2b565b825294820194908201906122b2565b965050860135925050808211156122e857600080fd5b506122f58582860161211b565b9150509250929050565b600081518084526020808501945080840160005b8381101561232f57815187529582019590820190600101612313565b509495945050505050565b602081526000611b9660208301846122ff565b60006020828403121561235f57600080fd5b81356001600160401b0381111561237557600080fd5b610eaa84828501611fe6565b60008060006060848603121561239657600080fd5b61239f84611f2b565b925060208401356001600160401b03808211156123bb57600080fd5b6123c78783880161211b565b935060408601359150808211156123dd57600080fd5b506120bb8682870161211b565b600080604083850312156123fd57600080fd5b61240683611f2b565b91506020830135801515811461241b57600080fd5b809150509250929050565b60006020828403121561243857600080fd5b611b9682611f2b565b6000806040838503121561245457600080fd5b61245d83611f2b565b915061246b60208401611f2b565b90509250929050565b600080600080600060a0868803121561248c57600080fd5b61249586611f2b565b94506124a360208701611f2b565b9350604086013592506060860135915060808601356001600160401b038111156124cc57600080fd5b61222888828901611fe6565b600181811c908216806124ec57607f821691505b6020821081141561250d57634e487b7160e01b600052602260045260246000fd5b50919050565b83815260606020820152600061252c6060830185611eec565b828103604084015261253e8185611eec565b9695505050505050565b6000815161255a818560208601611ec0565b9290920192915050565b600080855481600182811c91508083168061258057607f831692505b60208084108214156125a057634e487b7160e01b86526022600452602486fd5b8180156125b457600181146125c5576125f2565b60ff198616895284890196506125f2565b60008c81526020902060005b868110156125ea5781548b8201529085019083016125d1565b505084890196505b50505050505061253e6126156126088388612548565b602f60f81b815260010190565b85612548565b634e487b7160e01b600052601160045260246000fd5b600082198211156126445761264461261b565b500190565b6020808252602f908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526e195c881b9bdc88185c1c1c9bdd9959608a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b60006000198214156126c2576126c261261b565b5060010190565b6000828210156126db576126db61261b565b500390565b634e487b7160e01b600052601260045260246000fd5b600082612705576127056126e0565b500490565b600082612719576127196126e0565b500690565b60208082526021908201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60408152600061284960408301856122ff565b828103602084015261285b81856122ff565b95945050505050565b60208082526023908201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526024908201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604082015263616e636560e01b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008160001904831182151516156129505761295061261b565b500290565b6000816129645761296461261b565b506000190190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906129a690830184611eec565b979650505050505050565b6000602082840312156129c357600080fd5b8151611b9681611f71565b600060033d11156129e75760046000803e5060005160e01c5b90565b600060443d10156129f85790565b6040516003193d81016004833e81513d6001600160401b038160248401118184111715612a2757505050505090565b8285019150815181811115612a3f5750505050505090565b843d8701016020828501011115612a595750505050505090565b612a6860208286010187611fba565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b0386811682528516602082015260a060408201819052600090612ae7908301866122ff565b8281036060840152612af981866122ff565b90508281036080840152612b0d8185611eec565b9897505050505050505056fea26469706673582212205ae1ef5b95377c8895e4de4659f6b601c33f2fb82ed42aeb6e5331ba06e5565f64736f6c634300080c0033";

type M4mComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: M4mComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class M4mComponent__factory extends ContractFactory {
  constructor(...args: M4mComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "M4mComponent";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<M4mComponent> {
    return super.deploy(overrides || {}) as Promise<M4mComponent>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): M4mComponent {
    return super.attach(address) as M4mComponent;
  }
  connect(signer: Signer): M4mComponent__factory {
    return super.connect(signer) as M4mComponent__factory;
  }
  static readonly contractName: "M4mComponent";
  public readonly contractName: "M4mComponent";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): M4mComponentInterface {
    return new utils.Interface(_abi) as M4mComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): M4mComponent {
    return new Contract(address, _abi, signerOrProvider) as M4mComponent;
  }
}
