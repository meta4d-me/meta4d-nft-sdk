/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Zip, ZipInterface } from "../Zip";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
      {
        internalType: "contract SimpleM4mNFT",
        name: "_simpleM4mNFT",
        type: "address",
      },
      {
        internalType: "contract IM4mNFTRegistry",
        name: "_registry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "componentIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "mintM4mNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IM4mNFTRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "simpleM4mNFT",
    outputs: [
      {
        internalType: "contract SimpleM4mNFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newURI",
        type: "string",
      },
    ],
    name: "updateBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000f4238038062000f428339810160408190526200003491620001f6565b600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35082516200008a9060019060208601906200011d565b50600280546001600160a01b038481166001600160a01b031992831681179093556003805491851691909216811790915560405163a22cb46560e01b815260048101919091526001602482015263a22cb46590604401600060405180830381600087803b158015620000fb57600080fd5b505af115801562000110573d6000803e3d6000fd5b5050505050505062000336565b8280546200012b90620002f9565b90600052602060002090601f0160209004810192826200014f57600085556200019a565b82601f106200016a57805160ff19168380011785556200019a565b828001600101855582156200019a579182015b828111156200019a5782518255916020019190600101906200017d565b50620001a8929150620001ac565b5090565b5b80821115620001a85760008155600101620001ad565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b0381168114620001f157600080fd5b919050565b6000806000606084860312156200020c57600080fd5b83516001600160401b03808211156200022457600080fd5b818601915086601f8301126200023957600080fd5b8151818111156200024e576200024e620001c3565b604051601f8201601f19908116603f01168101908382118183101715620002795762000279620001c3565b816040528281526020935089848487010111156200029657600080fd5b600091505b82821015620002ba57848201840151818301850152908301906200029b565b82821115620002cc5760008484830101525b9650620002de915050868201620001d9565b93505050620002f060408501620001d9565b90509250925092565b600181811c908216806200030e57607f821691505b602082108114156200033057634e487b7160e01b600052602260045260246000fd5b50919050565b610bfc80620003466000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80637b103999116100665780637b1039991461011e5780638da5cb5b14610131578063931688cb14610142578063945817ec14610155578063f2fde38b1461016857600080fd5b8063150b7a02146100985780632528f5bf146100d45780636c0360eb146100ff578063715018a614610114575b600080fd5b6100b66100a636600461078a565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020015b60405180910390f35b6002546100e7906001600160a01b031681565b6040516001600160a01b0390911681526020016100cb565b61010761017b565b6040516100cb9190610843565b61011c610209565b005b6003546100e7906001600160a01b031681565b6000546001600160a01b03166100e7565b61011c610150366004610856565b610286565b61011c610163366004610927565b6102c7565b61011c6101763660046109b6565b610529565b60018054610188906109d3565b80601f01602080910402602001604051908101604052809291908181526020018280546101b4906109d3565b80156102015780601f106101d657610100808354040283529160200191610201565b820191906000526020600020905b8154815290600101906020018083116101e457829003601f168201915b505050505081565b6000546001600160a01b0316331461023c5760405162461bcd60e51b815260040161023390610a0e565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102b05760405162461bcd60e51b815260040161023390610a0e565b80516102c3906001906020840190610613565b5050565b6002546040805163d55f927360e01b815290516000926001600160a01b03169163d55f92739160048083019260209291908290030181865afa158015610311573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103359190610a43565b60025460405163d0def52160e01b81529192506001600160a01b03169063d0def52190610369903090600190600401610a5c565b600060405180830381600087803b15801561038357600080fd5b505af1158015610397573d6000803e3d6000fd5b5050600354600254604051624d5ba960e91b81526001600160a01b039283169450639ab7520093506103d792909116908590899089908990600401610b50565b600060405180830381600087803b1580156103f157600080fd5b505af1158015610405573d6000803e3d6000fd5b505060025460405160609190911b6bffffffffffffffffffffffff191660208201526034810184905260009250605401905060408051601f198184030181528282528051602091820120600354635f1179af60e11b855292519094506001600160a01b039092169263be22f35e92600480830193928290030181865afa158015610493573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b79190610ba9565b604051632142170760e11b81523060048201526001600160a01b0388811660248301526044820184905291909116906342842e0e90606401600060405180830381600087803b15801561050957600080fd5b505af115801561051d573d6000803e3d6000fd5b50505050505050505050565b6000546001600160a01b031633146105535760405162461bcd60e51b815260040161023390610a0e565b6001600160a01b0381166105b85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610233565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b82805461061f906109d3565b90600052602060002090601f0160209004810192826106415760008555610687565b82601f1061065a57805160ff1916838001178555610687565b82800160010185558215610687579182015b8281111561068757825182559160200191906001019061066c565b50610693929150610697565b5090565b5b808211156106935760008155600101610698565b6001600160a01b03811681146106c157600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610703576107036106c4565b604052919050565b600067ffffffffffffffff831115610725576107256106c4565b610738601f8401601f19166020016106da565b905082815283838301111561074c57600080fd5b828260208301376000602084830101529392505050565b600082601f83011261077457600080fd5b6107838383356020850161070b565b9392505050565b600080600080608085870312156107a057600080fd5b84356107ab816106ac565b935060208501356107bb816106ac565b925060408501359150606085013567ffffffffffffffff8111156107de57600080fd5b6107ea87828801610763565b91505092959194509250565b6000815180845260005b8181101561081c57602081850181015186830182015201610800565b8181111561082e576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061078360208301846107f6565b60006020828403121561086857600080fd5b813567ffffffffffffffff81111561087f57600080fd5b8201601f8101841361089057600080fd5b61089f8482356020840161070b565b949350505050565b600082601f8301126108b857600080fd5b8135602067ffffffffffffffff8211156108d4576108d46106c4565b8160051b6108e38282016106da565b92835284810182019282810190878511156108fd57600080fd5b83870192505b8483101561091c57823582529183019190830190610903565b979650505050505050565b6000806000806080858703121561093d57600080fd5b8435610948816106ac565b9350602085013567ffffffffffffffff8082111561096557600080fd5b610971888389016108a7565b9450604087013591508082111561098757600080fd5b610993888389016108a7565b935060608701359150808211156109a957600080fd5b506107ea87828801610763565b6000602082840312156109c857600080fd5b8135610783816106ac565b600181811c908216806109e757607f821691505b60208210811415610a0857634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610a5557600080fd5b5051919050565b60018060a01b0383168152600060206040818401526000845481600182811c915080831680610a8c57607f831692505b858310811415610aaa57634e487b7160e01b85526022600452602485fd5b6040880183905260608801818015610ac95760018114610ada57610b05565b60ff19861682528782019650610b05565b60008b81526020902060005b86811015610aff57815484820152908501908901610ae6565b83019750505b50949a9950505050505050505050565b600081518084526020808501945080840160005b83811015610b4557815187529582019590820190600101610b29565b509495945050505050565b60018060a01b038616815284602082015260a060408201526000610b7760a0830186610b15565b8281036060840152610b898186610b15565b90508281036080840152610b9d81856107f6565b98975050505050505050565b600060208284031215610bbb57600080fd5b8151610783816106ac56fea2646970667358221220b10c4d47c928c337ccda772ce3edbb0c5748a87fd590ab211034ad491b2f7fb264736f6c634300080c0033";

type ZipConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZipConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Zip__factory extends ContractFactory {
  constructor(...args: ZipConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Zip";
  }

  deploy(
    _baseURI: string,
    _simpleM4mNFT: string,
    _registry: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Zip> {
    return super.deploy(
      _baseURI,
      _simpleM4mNFT,
      _registry,
      overrides || {}
    ) as Promise<Zip>;
  }
  getDeployTransaction(
    _baseURI: string,
    _simpleM4mNFT: string,
    _registry: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _baseURI,
      _simpleM4mNFT,
      _registry,
      overrides || {}
    );
  }
  attach(address: string): Zip {
    return super.attach(address) as Zip;
  }
  connect(signer: Signer): Zip__factory {
    return super.connect(signer) as Zip__factory;
  }
  static readonly contractName: "Zip";
  public readonly contractName: "Zip";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZipInterface {
    return new utils.Interface(_abi) as ZipInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Zip {
    return new Contract(address, _abi, signerOrProvider) as Zip;
  }
}
