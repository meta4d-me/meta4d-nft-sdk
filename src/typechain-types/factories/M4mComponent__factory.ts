/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { M4mComponent, M4mComponentInterface } from "../M4mComponent";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "PreparedComponent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOperator",
        type: "address",
      },
    ],
    name: "SetOperator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "operator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "prepareNewToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "base",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOperator",
        type: "address",
      },
    ],
    name: "setOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612b5b806100206000396000f3fe608060405234801561001057600080fd5b50600436106101715760003560e01c80636c0360eb116100de578063bd85b03911610097578063e985e9c511610071578063e985e9c514610355578063f242432a14610391578063f2fde38b146103a4578063f5298aca146103b757600080fd5b8063bd85b0391461030f578063c4d66de81461032f578063d81d0a151461034257600080fd5b80636c0360eb146102b5578063715018a6146102bd5780637b103999146102c55780638da5cb5b146102d8578063a22cb465146102e9578063b3ab15fb146102fc57600080fd5b80632eb2c2d6116101305780632eb2c2d61461021e5780634e1273f4146102315780634e41a1fb1461025157806355f804b314610264578063570ca735146102775780636b20c454146102a257600080fd5b8062ad800c14610176578062fdd58e1461019f57806301ffc9a7146101c05780630577486d146101e35780630e89341c146101f8578063156e29f61461020b575b600080fd5b610189610184366004611ec9565b6103ca565b6040516101969190611f3e565b60405180910390f35b6101b26101ad366004611f6d565b610464565b604051908152602001610196565b6101d36101ce366004611fad565b6104fd565b6040519015158152602001610196565b6101f66101f136600461207f565b61054f565b005b610189610206366004611ec9565b610671565b6101f66102193660046120eb565b6106af565b6101f661022c3660046121b2565b610747565b61024461023f36600461225b565b6107de565b6040516101969190612360565b61018961025f366004611ec9565b610907565b6101f6610272366004612373565b610920565b60cd5461028a906001600160a01b031681565b6040516001600160a01b039091168152602001610196565b6101f66102b03660046123a7565b610993565b610189610a80565b6101f6610a8d565b60cc5461028a906001600160a01b031681565b6097546001600160a01b031661028a565b6101f66102f7366004612410565b610ac3565b6101f661030a36600461244c565b610ace565b6101b261031d366004611ec9565b60cb6020526000908152604090205481565b6101f661033d36600461244c565b610b4c565b6101f66103503660046123a7565b610c40565b6101d3610363366004612467565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205460ff1690565b6101f661039f36600461249a565b610d41565b6101f66103b236600461244c565b610dc8565b6101f66103c53660046120eb565b610e63565b60c960205260009081526040902080546103e3906124fe565b80601f016020809104026020016040519081016040528092919081815260200182805461040f906124fe565b801561045c5780601f106104315761010080835404028352916020019161045c565b820191906000526020600020905b81548152906001019060200180831161043f57829003601f168201915b505050505081565b60006001600160a01b0383166104d55760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b5060009081526065602090815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061052e57506001600160e01b031982166303a24d0760e21b145b8061054957506301ffc9a760e01b6001600160e01b03198316145b92915050565b6097546001600160a01b0316331480610572575060cd546001600160a01b031633145b6105ab5760405162461bcd60e51b815260206004820152600a60248201526934b6361031b0b63632b960b11b60448201526064016104cc565b600083815260cb6020526040902054156105f15760405162461bcd60e51b8152602060048201526007602482015266195e1a5cdd195960ca1b60448201526064016104cc565b600083815260c960209081526040909120835161061092850190611e30565b50600083815260ca60209081526040909120825161063092840190611e30565b507fd5deb8fdbdcf78ecffe3f736c647adb13f1fdfedcba2fb2243fabefef0b3955283838360405161066493929190612539565b60405180910390a1505050565b606060ce61067e30610efa565b61068784610f56565b6040516020016106999392919061258a565b6040516020818303038152906040529050919050565b60cc546001600160a01b031633146106f95760405162461bcd60e51b815260206004820152600d60248201526c6f6e6c7920726567697374727960981b60448201526064016104cc565b61070282611053565b600082815260cb602052604081208054839290610720908490612657565b9250508190555061074283838360405180602001604052806000815250611127565b505050565b6001600160a01b03851633148061076357506107638533610363565b6107ca5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016104cc565b6107d785858585856111f9565b5050505050565b606081518351146108435760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016104cc565b600083516001600160401b0381111561085e5761085e611fca565b604051908082528060200260200182016040528015610887578160200160208202803683370190505b50905060005b84518110156108ff576108d28582815181106108ab576108ab61266f565b60200260200101518583815181106108c5576108c561266f565b6020026020010151610464565b8282815181106108e4576108e461266f565b60209081029190910101526108f881612685565b905061088d565b509392505050565b60ca60205260009081526040902080546103e3906124fe565b6097546001600160a01b0316331480610943575060cd546001600160a01b031633145b61097c5760405162461bcd60e51b815260206004820152600a60248201526934b6361031b0b63632b960b11b60448201526064016104cc565b805161098f9060ce906020840190611e30565b5050565b6001600160a01b0383163314806109af57506109af8333610363565b6109fb5760405162461bcd60e51b815260206004820181905260248201527f63616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656460448201526064016104cc565b60005b8151811015610a7457818181518110610a1957610a1961266f565b602002602001015160cb6000858481518110610a3757610a3761266f565b602002602001015181526020019081526020016000206000828254610a5c91906126a0565b90915550819050610a6c81612685565b9150506109fe565b50610742838383611398565b60ce80546103e3906124fe565b6097546001600160a01b03163314610ab75760405162461bcd60e51b81526004016104cc906126b7565b610ac16000611517565b565b61098f338383611569565b6097546001600160a01b03163314610af85760405162461bcd60e51b81526004016104cc906126b7565b60cd80546001600160a01b0319166001600160a01b0383169081179091556040519081527fdbebfba65bd6398fb722063efc10c99f624f9cd8ba657201056af918a676d5ee9060200160405180910390a150565b600054610100900460ff16610b675760005460ff1615610b6b565b303b155b610bce5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016104cc565b600054610100900460ff16158015610bf0576000805461ffff19166101011790555b610c086040518060200160405280600081525061164a565b610c1061167a565b60cc80546001600160a01b0319166001600160a01b038416179055801561098f576000805461ff00191690555050565b60cc546001600160a01b03163314610c8a5760405162461bcd60e51b815260206004820152600d60248201526c6f6e6c7920726567697374727960981b60448201526064016104cc565b60005b8251811015610d2557610cb8838281518110610cab57610cab61266f565b6020026020010151611053565b818181518110610cca57610cca61266f565b602002602001015160cb6000858481518110610ce857610ce861266f565b602002602001015181526020019081526020016000206000828254610d0d9190612657565b90915550819050610d1d81612685565b915050610c8d565b50610742838383604051806020016040528060008152506116aa565b6001600160a01b038516331480610d5d5750610d5d8533610363565b610dbb5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016104cc565b6107d785858585856117f6565b6097546001600160a01b03163314610df25760405162461bcd60e51b81526004016104cc906126b7565b6001600160a01b038116610e575760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104cc565b610e6081611517565b50565b6001600160a01b038316331480610e7f5750610e7f8333610363565b610ecb5760405162461bcd60e51b815260206004820181905260248201527f63616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656460448201526064016104cc565b600082815260cb602052604081208054839290610ee99084906126a0565b909155506107429050838383611917565b606081610f215750506040805180820190915260048152630307830360e41b602082015290565b8160005b8115610f445780610f3581612685565b915050600882901c9150610f25565b610f4e8482611a1d565b949350505050565b606081610f7a5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610fa45780610f8e81612685565b9150610f9d9050600a83612702565b9150610f7e565b6000816001600160401b03811115610fbe57610fbe611fca565b6040519080825280601f01601f191660200182016040528015610fe8576020820181803683370190505b5090505b8415610f4e57610ffd6001836126a0565b915061100a600a86612716565b611015906030612657565b60f81b81838151811061102a5761102a61266f565b60200101906001600160f81b031916908160001a90535061104c600a86612702565b9450610fec565b600081815260c960205260408120805461106c906124fe565b80601f0160208091040260200160405190810160405280929190818152602001828054611098906124fe565b80156110e55780601f106110ba576101008083540402835291602001916110e5565b820191906000526020600020905b8154815290600101906020018083116110c857829003601f168201915b50505050509050600081511161098f5760405162461bcd60e51b815260206004820152600760248201526637379030ba3a3960c91b60448201526064016104cc565b6001600160a01b03841661114d5760405162461bcd60e51b81526004016104cc9061272a565b336111678160008761115e88611bbf565b6107d788611bbf565b60008481526065602090815260408083206001600160a01b038916845290915281208054859290611199908490612657565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46107d781600087878787611c0a565b815183511461121a5760405162461bcd60e51b81526004016104cc9061276b565b6001600160a01b0384166112405760405162461bcd60e51b81526004016104cc906127b3565b3360005b845181101561132a5760008582815181106112615761126161266f565b60200260200101519050600085838151811061127f5761127f61266f565b60209081029190910181015160008481526065835260408082206001600160a01b038e1683529093529190912054909150818110156112d05760405162461bcd60e51b81526004016104cc906127f8565b60008381526065602090815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061130f908490612657565b925050819055505050508061132390612685565b9050611244565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161137a929190612842565b60405180910390a4611390818787878787611d66565b505050505050565b6001600160a01b0383166113be5760405162461bcd60e51b81526004016104cc90612870565b80518251146113df5760405162461bcd60e51b81526004016104cc9061276b565b604080516020810190915260009081905233905b83518110156114b85760008482815181106114105761141061266f565b60200260200101519050600084838151811061142e5761142e61266f565b60209081029190910181015160008481526065835260408082206001600160a01b038c16835290935291909120549091508181101561147f5760405162461bcd60e51b81526004016104cc906128b3565b60009283526065602090815260408085206001600160a01b038b16865290915290922091039055806114b081612685565b9150506113f3565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051611509929190612842565b60405180910390a450505050565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031614156115dd5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016104cc565b6001600160a01b03838116600081815260666020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b600054610100900460ff166116715760405162461bcd60e51b81526004016104cc906128f7565b610e6081611e21565b600054610100900460ff166116a15760405162461bcd60e51b81526004016104cc906128f7565b610ac133611517565b6001600160a01b0384166116d05760405162461bcd60e51b81526004016104cc9061272a565b81518351146116f15760405162461bcd60e51b81526004016104cc9061276b565b3360005b845181101561178e578381815181106117105761171061266f565b60200260200101516065600087848151811061172e5761172e61266f565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b0316815260200190815260200160002060008282546117769190612657565b9091555081905061178681612685565b9150506116f5565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516117df929190612842565b60405180910390a46107d781600087878787611d66565b6001600160a01b03841661181c5760405162461bcd60e51b81526004016104cc906127b3565b3361182c81878761115e88611bbf565b60008481526065602090815260408083206001600160a01b038a1684529091529020548381101561186f5760405162461bcd60e51b81526004016104cc906127f8565b60008581526065602090815260408083206001600160a01b038b81168552925280832087850390559088168252812080548692906118ae908490612657565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461190e828888888888611c0a565b50505050505050565b6001600160a01b03831661193d5760405162461bcd60e51b81526004016104cc90612870565b3361196d8185600061194e87611bbf565b61195787611bbf565b5050604080516020810190915260009052505050565b60008381526065602090815260408083206001600160a01b0388168452909152902054828110156119b05760405162461bcd60e51b81526004016104cc906128b3565b60008481526065602090815260408083206001600160a01b03898116808652918452828520888703905582518981529384018890529092908616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050565b60606000611a2c836002612942565b611a37906002612657565b6001600160401b03811115611a4e57611a4e611fca565b6040519080825280601f01601f191660200182016040528015611a78576020820181803683370190505b509050600360fc1b81600081518110611a9357611a9361266f565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611ac257611ac261266f565b60200101906001600160f81b031916908160001a9053506000611ae6846002612942565b611af1906001612657565b90505b6001811115611b69576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611b2557611b2561266f565b1a60f81b828281518110611b3b57611b3b61266f565b60200101906001600160f81b031916908160001a90535060049490941c93611b6281612961565b9050611af4565b508315611bb85760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016104cc565b9392505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611bf957611bf961266f565b602090810291909101015292915050565b6001600160a01b0384163b156113905760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190611c4e9089908990889088908890600401612978565b6020604051808303816000875af1925050508015611c89575060408051601f3d908101601f19168201909252611c86918101906129bd565b60015b611d3657611c956129da565b806308c379a01415611ccf5750611caa6129f6565b80611cb55750611cd1565b8060405162461bcd60e51b81526004016104cc9190611f3e565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016104cc565b6001600160e01b0319811663f23a6e6160e01b1461190e5760405162461bcd60e51b81526004016104cc90612a7f565b6001600160a01b0384163b156113905760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190611daa9089908990889088908890600401612ac7565b6020604051808303816000875af1925050508015611de5575060408051601f3d908101601f19168201909252611de2918101906129bd565b60015b611df157611c956129da565b6001600160e01b0319811663bc197c8160e01b1461190e5760405162461bcd60e51b81526004016104cc90612a7f565b805161098f9060679060208401905b828054611e3c906124fe565b90600052602060002090601f016020900481019282611e5e5760008555611ea4565b82601f10611e7757805160ff1916838001178555611ea4565b82800160010185558215611ea4579182015b82811115611ea4578251825591602001919060010190611e89565b50611eb0929150611eb4565b5090565b5b80821115611eb05760008155600101611eb5565b600060208284031215611edb57600080fd5b5035919050565b60005b83811015611efd578181015183820152602001611ee5565b83811115611f0c576000848401525b50505050565b60008151808452611f2a816020860160208601611ee2565b601f01601f19169290920160200192915050565b602081526000611bb86020830184611f12565b80356001600160a01b0381168114611f6857600080fd5b919050565b60008060408385031215611f8057600080fd5b611f8983611f51565b946020939093013593505050565b6001600160e01b031981168114610e6057600080fd5b600060208284031215611fbf57600080fd5b8135611bb881611f97565b634e487b7160e01b600052604160045260246000fd5b601f8201601f191681016001600160401b038111828210171561200557612005611fca565b6040525050565b600082601f83011261201d57600080fd5b81356001600160401b0381111561203657612036611fca565b60405161204d601f8301601f191660200182611fe0565b81815284602083860101111561206257600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561209457600080fd5b8335925060208401356001600160401b03808211156120b257600080fd5b6120be8783880161200c565b935060408601359150808211156120d457600080fd5b506120e18682870161200c565b9150509250925092565b60008060006060848603121561210057600080fd5b61210984611f51565b95602085013595506040909401359392505050565b60006001600160401b0382111561213757612137611fca565b5060051b60200190565b600082601f83011261215257600080fd5b8135602061215f8261211e565b60405161216c8282611fe0565b83815260059390931b850182019282810191508684111561218c57600080fd5b8286015b848110156121a75780358352918301918301612190565b509695505050505050565b600080600080600060a086880312156121ca57600080fd5b6121d386611f51565b94506121e160208701611f51565b935060408601356001600160401b03808211156121fd57600080fd5b61220989838a01612141565b9450606088013591508082111561221f57600080fd5b61222b89838a01612141565b9350608088013591508082111561224157600080fd5b5061224e8882890161200c565b9150509295509295909350565b6000806040838503121561226e57600080fd5b82356001600160401b038082111561228557600080fd5b818501915085601f83011261229957600080fd5b813560206122a68261211e565b6040516122b38282611fe0565b83815260059390931b85018201928281019150898411156122d357600080fd5b948201945b838610156122f8576122e986611f51565b825294820194908201906122d8565b9650508601359250508082111561230e57600080fd5b5061231b85828601612141565b9150509250929050565b600081518084526020808501945080840160005b8381101561235557815187529582019590820190600101612339565b509495945050505050565b602081526000611bb86020830184612325565b60006020828403121561238557600080fd5b81356001600160401b0381111561239b57600080fd5b610f4e8482850161200c565b6000806000606084860312156123bc57600080fd5b6123c584611f51565b925060208401356001600160401b03808211156123e157600080fd5b6123ed87838801612141565b9350604086013591508082111561240357600080fd5b506120e186828701612141565b6000806040838503121561242357600080fd5b61242c83611f51565b91506020830135801515811461244157600080fd5b809150509250929050565b60006020828403121561245e57600080fd5b611bb882611f51565b6000806040838503121561247a57600080fd5b61248383611f51565b915061249160208401611f51565b90509250929050565b600080600080600060a086880312156124b257600080fd5b6124bb86611f51565b94506124c960208701611f51565b9350604086013592506060860135915060808601356001600160401b038111156124f257600080fd5b61224e8882890161200c565b600181811c9082168061251257607f821691505b6020821081141561253357634e487b7160e01b600052602260045260246000fd5b50919050565b8381526060602082015260006125526060830185611f12565b82810360408401526125648185611f12565b9695505050505050565b60008151612580818560208601611ee2565b9290920192915050565b600080855481600182811c9150808316806125a657607f831692505b60208084108214156125c657634e487b7160e01b86526022600452602486fd5b8180156125da57600181146125eb57612618565b60ff19861689528489019650612618565b60008c81526020902060005b868110156126105781548b8201529085019083016125f7565b505084890196505b50505050505061256461263b61262e838861256e565b602f60f81b815260010190565b8561256e565b634e487b7160e01b600052601160045260246000fd5b6000821982111561266a5761266a612641565b500190565b634e487b7160e01b600052603260045260246000fd5b600060001982141561269957612699612641565b5060010190565b6000828210156126b2576126b2612641565b500390565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601260045260246000fd5b600082612711576127116126ec565b500490565b600082612725576127256126ec565b500690565b60208082526021908201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b6040815260006128556040830185612325565b82810360208401526128678185612325565b95945050505050565b60208082526023908201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526024908201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604082015263616e636560e01b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600081600019048311821515161561295c5761295c612641565b500290565b60008161297057612970612641565b506000190190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906129b290830184611f12565b979650505050505050565b6000602082840312156129cf57600080fd5b8151611bb881611f97565b600060033d11156129f35760046000803e5060005160e01c5b90565b600060443d1015612a045790565b6040516003193d81016004833e81513d6001600160401b038160248401118184111715612a3357505050505090565b8285019150815181811115612a4b5750505050505090565b843d8701016020828501011115612a655750505050505090565b612a7460208286010187611fe0565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b0386811682528516602082015260a060408201819052600090612af390830186612325565b8281036060840152612b058186612325565b90508281036080840152612b198185611f12565b9897505050505050505056fea2646970667358221220f019b70dc74e49e243bd40b6e2dbb6e4a3021202555b2d6f8692c3e57036f18064736f6c634300080c0033";

type M4mComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: M4mComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class M4mComponent__factory extends ContractFactory {
  constructor(...args: M4mComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "M4mComponent";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<M4mComponent> {
    return super.deploy(overrides || {}) as Promise<M4mComponent>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): M4mComponent {
    return super.attach(address) as M4mComponent;
  }
  connect(signer: Signer): M4mComponent__factory {
    return super.connect(signer) as M4mComponent__factory;
  }
  static readonly contractName: "M4mComponent";
  public readonly contractName: "M4mComponent";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): M4mComponentInterface {
    return new utils.Interface(_abi) as M4mComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): M4mComponent {
    return new Contract(address, _abi, signerOrProvider) as M4mComponent;
  }
}
