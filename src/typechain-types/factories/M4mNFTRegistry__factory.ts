/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  M4mNFTRegistry,
  M4mNFTRegistryInterface,
} from "../M4mNFTRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "m4mTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "componentIds",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amount",
        type: "uint256[]",
      },
    ],
    name: "Assemble",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "componentIds",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amount",
        type: "uint256[]",
      },
    ],
    name: "ClaimedLoot",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC721",
        name: "original",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "originalTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "m4mTokenId",
        type: "uint256",
      },
    ],
    name: "ConvertToM4mNFT",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "m4mTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "componentIds",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amount",
        type: "uint256[]",
      },
    ],
    name: "Initialize",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC721",
        name: "original",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "originalTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "m4mTokenId",
        type: "uint256",
      },
    ],
    name: "Redeem",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOperator",
        type: "address",
      },
    ],
    name: "SetOperator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "m4mTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "componentIds",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amount",
        type: "uint256[]",
      },
    ],
    name: "Split",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "m4mTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "componentIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "assembleM4mNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uuid",
        type: "string",
      },
      {
        internalType: "uint256[]",
        name: "componentIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "claimLoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "claimedLoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "components",
    outputs: [
      {
        internalType: "contract IM4mComponents",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "original",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "originalTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "componentIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "convertNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dao",
    outputs: [
      {
        internalType: "contract IM4mDAO",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "m4mTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "componentId",
        type: "uint256",
      },
    ],
    name: "getTokenComponentAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "m4mTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "componentIds",
        type: "uint256[]",
      },
    ],
    name: "getTokenComponentAmounts",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "m4mTokenId",
        type: "uint256",
      },
    ],
    name: "getTokenStatus",
    outputs: [
      {
        internalType: "enum IM4mNFTRegistry.TokenStatus",
        name: "",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IM4mComponents",
        name: "_components",
        type: "address",
      },
      {
        internalType: "contract IM4mNFT",
        name: "_m4mNFT",
        type: "address",
      },
      {
        internalType: "contract IM4mDAO",
        name: "_dao",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "m4mTokenId",
        type: "uint256",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "m4mNFT",
    outputs: [
      {
        internalType: "contract IM4mNFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "operator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "m4mTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "componentIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOperator",
        type: "address",
      },
    ],
    name: "setOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "m4mTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "componentIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "splitM4mNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "splitTokens",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "original",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "originalTokenId",
        type: "uint256",
      },
      {
        internalType: "enum IM4mNFTRegistry.TokenStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "originalAttrHash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "m4mTokenId",
        type: "uint256",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506126b5806100206000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c8063906e83cc116100de578063bc197c8111610097578063cb849b9a11610071578063cb849b9a146103ff578063dd4670641461043d578063f23a6e6114610450578063f2fde38b1461046f57600080fd5b8063bc197c81146103b9578063be22f35e146103d8578063c0c53b8b146103ec57600080fd5b8063906e83cc146102f25780639482b9cc146103485780639ab752001461036c578063a33096361461037f578063b3ab15fb14610392578063ba62fbe4146103a557600080fd5b8063570ca73511610130578063570ca7351461024b5780636198e3391461025f578063715018a61461027257806384b1f2e41461027a5780638da5cb5b1461028d5780638f07c2b41461029e57600080fd5b806301ffc9a7146101785780631180ef2e146101a0578063150b7a02146101b557806324886d46146101ec578063294b1693146101ff5780634162169f1461021f575b600080fd5b61018b610186366004611ca8565b610482565b60405190151581526020015b60405180910390f35b6101b36101ae366004611d8c565b6104b9565b005b6101d36101c3366004611e86565b630a85bd0160e11b949350505050565b6040516001600160e01b03199091168152602001610197565b6101b36101fa366004611d8c565b61074d565b61021261020d366004611ef2565b610913565b6040516101979190611f74565b61012d54610233906001600160a01b031681565b6040516001600160a01b039091168152602001610197565b61013054610233906001600160a01b031681565b6101b361026d366004611f87565b6109df565b6101b3610ad3565b6101b3610288366004611d8c565b610b09565b6033546001600160a01b0316610233565b6102e26102ac366004611f87565b60009081526101316020526040902060028101546003820154825460019093015460ff9092169390926001600160a01b03169190565b6040516101979493929190611fd8565b610338610300366004611f87565b6101316020526000908152604090208054600182015460028301546003909301546001600160a01b0390921692909160ff9091169084565b604051610197949392919061200a565b61018b610356366004611f87565b6101326020526000908152604090205460ff1681565b6101b361037a36600461203d565b610ed7565b6101b361038d3660046120e2565b611113565b6101b36103a036600461219a565b6112d7565b61012f54610233906001600160a01b031681565b6101d36103c73660046121b7565b63bc197c8160e01b95945050505050565b61012e54610233906001600160a01b031681565b6101b36103fa366004612207565b611356565b61042f61040d366004612252565b6000918252610131602090815260408084209284526004909201905290205490565b604051908152602001610197565b6101b361044b366004611f87565b611475565b6101d361045e366004612274565b63f23a6e6160e01b95945050505050565b6101b361047d36600461219a565b611563565b60006001600160e01b03198216630271189760e51b14806104b357506301ffc9a760e01b6001600160e01b03198316145b92915050565b805182511480156104cb575060008151115b6104f05760405162461bcd60e51b81526004016104e7906122dd565b60405180910390fd5b6000838152610131602052604090206001600282015460ff16600381111561051a5761051a611fa0565b146105375760405162461bcd60e51b81526004016104e790612301565b6003600282015460ff16600381111561055257610552611fa0565b14806105d2575061012e546040516331a9108f60e11b81526004810186905233916001600160a01b031690636352211e90602401602060405180830381865afa1580156105a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c79190612325565b6001600160a01b0316145b6105ee5760405162461bcd60e51b81526004016104e790612301565b60005b83518110156106a257600083828151811061060e5761060e612342565b6020026020010151116106335760405162461bcd60e51b81526004016104e790612358565b82818151811061064557610645612342565b602002602001015182600401600086848151811061066557610665612342565b60200260200101518152602001908152602001600020600082825461068a9190612392565b9091555081905061069a816123a9565b9150506105f1565b5061012f54604051631759616b60e11b81526001600160a01b0390911690632eb2c2d6906106da9030903390889088906004016123c4565b600060405180830381600087803b1580156106f457600080fd5b505af1158015610708573d6000803e3d6000fd5b505050507f02e9fa1a9e688cb33ba14e43bb036cc0adbcf02f5bd5d14593aca38e2a80a9c984848460405161073f9392919061241f565b60405180910390a150505050565b8051825114801561075f575060008151115b61077b5760405162461bcd60e51b81526004016104e7906122dd565b6000838152610131602052604090206001600282015460ff1660038111156107a5576107a5611fa0565b146107c25760405162461bcd60e51b81526004016104e790612301565b60005b83518110156108765760008382815181106107e2576107e2612342565b6020026020010151116108075760405162461bcd60e51b81526004016104e790612358565b82818151811061081957610819612342565b602002602001015182600401600086848151811061083957610839612342565b60200260200101518152602001908152602001600020600082825461085e9190612454565b9091555081905061086e816123a9565b9150506107c5565b5061012f54604051631759616b60e11b81526001600160a01b0390911690632eb2c2d6906108ae9033903090889088906004016123c4565b600060405180830381600087803b1580156108c857600080fd5b505af11580156108dc573d6000803e3d6000fd5b505050507fc563e421ed07e95a50b7f495447d2d15309c3bee854743f0f721c0c4a489551984848460405161073f9392919061241f565b60008281526101316020526040812082516060929067ffffffffffffffff81111561094057610940611cc5565b604051908082528060200260200182016040528015610969578160200160208202803683370190505b50905060005b84518110156109d65782600401600086838151811061099057610990612342565b60200260200101518152602001908152602001600020548282815181106109b9576109b9612342565b6020908102919091010152806109ce816123a9565b91505061096f565b50949350505050565b60008181526101316020526040902060028082015460ff166003811115610a0857610a08611fa0565b14610a255760405162461bcd60e51b81526004016104e790612301565b61012e546040516331a9108f60e11b81526004810184905233916001600160a01b031690636352211e90602401602060405180830381865afa158015610a6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a939190612325565b6001600160a01b031614610ab95760405162461bcd60e51b81526004016104e79061246c565b6002810180546001919060ff191682805b02179055505050565b6033546001600160a01b03163314610afd5760405162461bcd60e51b81526004016104e79061248f565b610b0760006115fe565b565b80518251148015610b1b575060008151115b610b375760405162461bcd60e51b81526004016104e7906122dd565b6000838152610131602052604090206001600282015460ff166003811115610b6157610b61611fa0565b14610b7e5760405162461bcd60e51b81526004016104e790612301565b6000848484604051602001610b95939291906124e9565b60405160208183030381529060405280519060200120905081600301548114610bec5760405162461bcd60e51b8152602060048201526009602482015268696c6c20617474727360b81b60448201526064016104e7565b61012e546040516331a9108f60e11b81526004810187905233916001600160a01b031690636352211e90602401602060405180830381865afa158015610c36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5a9190612325565b6001600160a01b031614610c805760405162461bcd60e51b81526004016104e79061246c565b60005b8451811015610d34576000848281518110610ca057610ca0612342565b602002602001015111610cc55760405162461bcd60e51b81526004016104e790612358565b838181518110610cd757610cd7612342565b6020026020010151836004016000878481518110610cf757610cf7612342565b602002602001015181526020019081526020016000206000828254610d1c9190612392565b90915550819050610d2c816123a9565b915050610c83565b5061012f54604051631ac8311560e21b81526001600160a01b0390911690636b20c45490610d6a9030908890889060040161250d565b600060405180830381600087803b158015610d8457600080fd5b505af1158015610d98573d6000803e3d6000fd5b5050505060028201805460ff1916600317905581546001830154604051632142170760e11b815230600482015233602482015260448101919091526001600160a01b03909116906342842e0e90606401600060405180830381600087803b158015610e0257600080fd5b505af1158015610e16573d6000803e3d6000fd5b505061012e54604051630852cd8d60e31b8152600481018990526001600160a01b0390911692506342966c689150602401600060405180830381600087803b158015610e6157600080fd5b505af1158015610e75573d6000803e3d6000fd5b505083546001850154604080513381526001600160a01b039093166020840152820152606081018890527f3f693fff038bb8a046aa76d9516190ac7444f7d69cf952c4cbdc086fdef2d6fc925060800190505b60405180910390a15050505050565b61012d54604051635c502c7f60e11b81526001600160a01b0387811660048301529091169063b8a058fe90602401602060405180830381865afa158015610f22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f469190612531565b610f835760405162461bcd60e51b815260206004820152600e60248201526d18d85b9b9bdd0818dbdb9d995c9d60921b60448201526064016104e7565b604051632142170760e11b8152336004820152306024820152604481018590526001600160a01b038616906342842e0e90606401600060405180830381600087803b158015610fd157600080fd5b505af1158015610fe5573d6000803e3d6000fd5b50506040516bffffffffffffffffffffffff19606089901b1660208201526034810187905260009250605401905060408051808303601f1901815290829052805160209091012061012e546340c10f1960e01b8352336004840152602483018290529092506001600160a01b0316906340c10f1990604401600060405180830381600087803b15801561107757600080fd5b505af115801561108b573d6000803e3d6000fd5b50505050600061109d82868686611650565b80546001600160a01b0319166001600160a01b0389169081178255600182018890556040805133815260208101929092528101889052606081018490529091507fa24f03a00be68b18cc575757f35174a4777d40e14839913a42d8b56eb460039b9060800160405180910390a150505050505050565b81518351146111505760405162461bcd60e51b8152602060048201526009602482015268696c6c20706172616d60b81b60448201526064016104e7565b600033858585604051602001611169949392919061257f565b60408051601f198184030181529181528151602092830120600081815261013290935291205490915060ff16156111d45760405162461bcd60e51b815260206004820152600f60248201526e185b1c9958591e4818db185a5b5959608a1b60448201526064016104e7565b610130546111ec906001600160a01b03168284611957565b6112225760405162461bcd60e51b8152602060048201526007602482015266696c6c2073696760c81b60448201526064016104e7565b61012f5460405163d81d0a1560e01b81526001600160a01b039091169063d81d0a15906112579033908890889060040161250d565b600060405180830381600087803b15801561127157600080fd5b505af1158015611285573d6000803e3d6000fd5b5050506000828152610132602052604090819020805460ff19166001179055517fdcba343a7619980b6e3b8b57d437f6ae8508ed8335361976033e514d9467a01c9150610ec89033908790879061250d565b6033546001600160a01b031633146113015760405162461bcd60e51b81526004016104e79061248f565b61013080546001600160a01b0319166001600160a01b0383169081179091556040519081527fdbebfba65bd6398fb722063efc10c99f624f9cd8ba657201056af918a676d5ee9060200160405180910390a150565b600054610100900460ff166113715760005460ff1615611375565b303b155b6113d85760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016104e7565b600054610100900460ff161580156113fa576000805461ffff19166101011790555b611402611aa5565b61140a611ad5565b611412611ad5565b61012f80546001600160a01b038087166001600160a01b03199283161790925561012e8054868416908316179055610130805482163317905561012d805492851692909116919091179055801561146f576000805461ff00191690555b50505050565b6000818152610131602052604090206001600282015460ff16600381111561149f5761149f611fa0565b146114bc5760405162461bcd60e51b81526004016104e790612301565b61012e546040516331a9108f60e11b81526004810184905233916001600160a01b031690636352211e90602401602060405180830381865afa158015611506573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152a9190612325565b6001600160a01b0316146115505760405162461bcd60e51b81526004016104e79061246c565b6002818101805460ff1916600183610aca565b6033546001600160a01b0316331461158d5760405162461bcd60e51b81526004016104e79061248f565b6001600160a01b0381166115f25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104e7565b6115fb816115fe565b50565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600082518451146116735760405162461bcd60e51b81526004016104e7906122dd565b5060008481526101316020526040812090600282015460ff16600381111561169d5761169d611fa0565b14806116c157506003600282015460ff1660038111156116bf576116bf611fa0565b145b6116dd5760405162461bcd60e51b81526004016104e790612301565b61012e546040516331a9108f60e11b81526004810187905233916001600160a01b031690636352211e90602401602060405180830381865afa158015611727573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061174b9190612325565b6001600160a01b0316146117715760405162461bcd60e51b81526004016104e79061246c565b6000858585604051602001611788939291906124e9565b60408051601f198184030181529190528051602090910120610130549091506117bb906001600160a01b03168285611957565b6117f15760405162461bcd60e51b8152602060048201526007602482015266696c6c2073696760c81b60448201526064016104e7565b60028201805460ff191660011790556003820181905560005b85518110156118ab57600085828151811061182757611827612342565b60200260200101511161184c5760405162461bcd60e51b81526004016104e790612358565b84818151811061185e5761185e612342565b602002602001015183600401600088848151811061187e5761187e612342565b602002602001015181526020019081526020016000208190555080806118a3906123a9565b91505061180a565b5061012f5460405163d81d0a1560e01b81526001600160a01b039091169063d81d0a15906118e19030908990899060040161250d565b600060405180830381600087803b1580156118fb57600080fd5b505af115801561190f573d6000803e3d6000fd5b505050507fccf96c97505992387fa12372d0b690ff46813059bdd576e31a63b2716f066dd88686866040516119469392919061241f565b60405180910390a150949350505050565b60008060006119668585611afc565b9092509050600081600481111561197f5761197f611fa0565b14801561199d5750856001600160a01b0316826001600160a01b0316145b156119ad57600192505050611a9e565b600080876001600160a01b0316631626ba7e60e01b88886040516024016119d59291906125c1565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051611a1391906125fb565b600060405180830381855afa9150503d8060008114611a4e576040519150601f19603f3d011682016040523d82523d6000602084013e611a53565b606091505b5091509150818015611a66575080516020145b8015611a9757508051630b135d3f60e11b90611a8b9083016020908101908401612617565b6001600160e01b031916145b9450505050505b9392505050565b600054610100900460ff16611acc5760405162461bcd60e51b81526004016104e790612634565b610b07336115fe565b600054610100900460ff16610b075760405162461bcd60e51b81526004016104e790612634565b600080825160411415611b335760208301516040840151606085015160001a611b2787828585611b6c565b94509450505050611b65565b825160401415611b5d5760208301516040840151611b52868383611c59565b935093505050611b65565b506000905060025b9250929050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611ba35750600090506003611c50565b8460ff16601b14158015611bbb57508460ff16601c14155b15611bcc5750600090506004611c50565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611c20573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611c4957600060019250925050611c50565b9150600090505b94509492505050565b6000806001600160ff1b03831681611c7660ff86901c601b612454565b9050611c8487828885611b6c565b935093505050935093915050565b6001600160e01b0319811681146115fb57600080fd5b600060208284031215611cba57600080fd5b8135611a9e81611c92565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611d0457611d04611cc5565b604052919050565b600082601f830112611d1d57600080fd5b8135602067ffffffffffffffff821115611d3957611d39611cc5565b8160051b611d48828201611cdb565b9283528481018201928281019087851115611d6257600080fd5b83870192505b84831015611d8157823582529183019190830190611d68565b979650505050505050565b600080600060608486031215611da157600080fd5b83359250602084013567ffffffffffffffff80821115611dc057600080fd5b611dcc87838801611d0c565b93506040860135915080821115611de257600080fd5b50611def86828701611d0c565b9150509250925092565b6001600160a01b03811681146115fb57600080fd5b600067ffffffffffffffff831115611e2857611e28611cc5565b611e3b601f8401601f1916602001611cdb565b9050828152838383011115611e4f57600080fd5b828260208301376000602084830101529392505050565b600082601f830112611e7757600080fd5b611a9e83833560208501611e0e565b60008060008060808587031215611e9c57600080fd5b8435611ea781611df9565b93506020850135611eb781611df9565b925060408501359150606085013567ffffffffffffffff811115611eda57600080fd5b611ee687828801611e66565b91505092959194509250565b60008060408385031215611f0557600080fd5b82359150602083013567ffffffffffffffff811115611f2357600080fd5b611f2f85828601611d0c565b9150509250929050565b600081518084526020808501945080840160005b83811015611f6957815187529582019590820190600101611f4d565b509495945050505050565b602081526000611a9e6020830184611f39565b600060208284031215611f9957600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60048110611fd457634e487b7160e01b600052602160045260246000fd5b9052565b60808101611fe68287611fb6565b60208201949094526001600160a01b03929092166040830152606090910152919050565b6001600160a01b0385168152602081018490526080810161202e6040830185611fb6565b82606083015295945050505050565b600080600080600060a0868803121561205557600080fd5b853561206081611df9565b945060208601359350604086013567ffffffffffffffff8082111561208457600080fd5b61209089838a01611d0c565b945060608801359150808211156120a657600080fd5b6120b289838a01611d0c565b935060808801359150808211156120c857600080fd5b506120d588828901611e66565b9150509295509295909350565b600080600080608085870312156120f857600080fd5b843567ffffffffffffffff8082111561211057600080fd5b818701915087601f83011261212457600080fd5b61213388833560208501611e0e565b9550602087013591508082111561214957600080fd5b61215588838901611d0c565b9450604087013591508082111561216b57600080fd5b61217788838901611d0c565b9350606087013591508082111561218d57600080fd5b50611ee687828801611e66565b6000602082840312156121ac57600080fd5b8135611a9e81611df9565b600080600080600060a086880312156121cf57600080fd5b85356121da81611df9565b945060208601356121ea81611df9565b9350604086013567ffffffffffffffff8082111561208457600080fd5b60008060006060848603121561221c57600080fd5b833561222781611df9565b9250602084013561223781611df9565b9150604084013561224781611df9565b809150509250925092565b6000806040838503121561226557600080fd5b50508035926020909101359150565b600080600080600060a0868803121561228c57600080fd5b853561229781611df9565b945060208601356122a781611df9565b93506040860135925060608601359150608086013567ffffffffffffffff8111156122d157600080fd5b6120d588828901611e66565b6020808252600a9082015269696c6c20706172616d7360b01b604082015260600190565b6020808252600a9082015269696c6c2073746174757360b01b604082015260600190565b60006020828403121561233757600080fd5b8151611a9e81611df9565b634e487b7160e01b600052603260045260246000fd5b6020808252600a90820152691a5b1b08185b5bdd5b9d60b21b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000828210156123a4576123a461237c565b500390565b60006000198214156123bd576123bd61237c565b5060010190565b6001600160a01b0385811682528416602082015260a0604082018190526000906123f090830185611f39565b82810360608401526124028185611f39565b838103608090940193909352505060008152602001949350505050565b8381526060602082015260006124386060830185611f39565b828103604084015261244a8185611f39565b9695505050505050565b600082198211156124675761246761237c565b500190565b60208082526009908201526834b6361037bbb732b960b91b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b80516000906020808401838315611f6957815187529582019590820190600101611f4d565b83815260006125046124fe60208401866124c4565b846124c4565b95945050505050565b6001600160a01b038416815260606020820181905260009061243890830185611f39565b60006020828403121561254357600080fd5b81518015158114611a9e57600080fd5b60005b8381101561256e578181015183820152602001612556565b8381111561146f5750506000910152565b6bffffffffffffffffffffffff198560601b168152600084516125a9816014850160208901612553565b611d816125bb601483860101876124c4565b856124c4565b82815260406020820152600082518060408401526125e6816060850160208701612553565b601f01601f1916919091016060019392505050565b6000825161260d818460208701612553565b9190910192915050565b60006020828403121561262957600080fd5b8151611a9e81611c92565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea264697066735822122093abd3631db1e7561c40f2bd588c3383a3a84ec507c701eb65b257397308e8e364736f6c634300080c0033";

type M4mNFTRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: M4mNFTRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class M4mNFTRegistry__factory extends ContractFactory {
  constructor(...args: M4mNFTRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "M4mNFTRegistry";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<M4mNFTRegistry> {
    return super.deploy(overrides || {}) as Promise<M4mNFTRegistry>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): M4mNFTRegistry {
    return super.attach(address) as M4mNFTRegistry;
  }
  connect(signer: Signer): M4mNFTRegistry__factory {
    return super.connect(signer) as M4mNFTRegistry__factory;
  }
  static readonly contractName: "M4mNFTRegistry";
  public readonly contractName: "M4mNFTRegistry";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): M4mNFTRegistryInterface {
    return new utils.Interface(_abi) as M4mNFTRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): M4mNFTRegistry {
    return new Contract(address, _abi, signerOrProvider) as M4mNFTRegistry;
  }
}
