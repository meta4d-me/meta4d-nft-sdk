/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { M4mNFT, M4mNFTInterface } from "../M4mNFT";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dao",
    outputs: [
      {
        internalType: "contract IM4mDAO",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "__baseURI",
        type: "string",
      },
      {
        internalType: "contract IM4mNFTRegistry",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "contract IM4mDAO",
        name: "_dao",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "num",
        type: "uint256",
      },
    ],
    name: "mintBatch",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "num",
        type: "uint256",
      },
    ],
    name: "mintBatch",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mintByRegistry",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IM4mNFTRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506120f3806100206000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80634f6ccce7116100f957806395d89b4111610097578063b88d4fde11610071578063b88d4fde1461037b578063c87b56dd1461038e578063e985e9c5146103a1578063f2fde38b146103dd57600080fd5b806395d89b411461034d578063a22cb46514610355578063b6afc4dc1461036857600080fd5b806370a08231116100d357806370a082311461030e578063715018a6146103215780637b103999146103295780638da5cb5b1461033c57600080fd5b80634f6ccce7146102d55780636352211e146102e85780636a627842146102fb57600080fd5b8063248b71fc116101665780634162169f116101405780634162169f1461028957806342842e0e1461029c57806342966c68146102af578063463fd1af146102c257600080fd5b8063248b71fc146102505780632f745c591461026357806340e61e841461027657600080fd5b806301ffc9a7146101ae57806306fdde03146101d6578063081812fc146101eb578063095ea7b31461021657806318160ddd1461022b57806323b872dd1461023d575b600080fd5b6101c16101bc366004611a5c565b6103f0565b60405190151581526020015b60405180910390f35b6101de61041b565b6040516101cd9190611ad1565b6101fe6101f9366004611ae4565b6104ad565b6040516001600160a01b0390911681526020016101cd565b610229610224366004611b12565b610547565b005b60cb545b6040519081526020016101cd565b61022961024b366004611b3e565b61065d565b61022f61025e366004611b12565b61068f565b61022f610271366004611b12565b6106f7565b61022f610284366004611b7f565b61078d565b60fd546101fe906001600160a01b031681565b6102296102aa366004611b3e565b6107ba565b6102296102bd366004611ae4565b6107d5565b6102296102d0366004611c3b565b610836565b61022f6102e3366004611ae4565b61093e565b6101fe6102f6366004611ae4565b6109d1565b61022f610309366004611b7f565b610a48565b61022f61031c366004611b7f565b610ac5565b610229610b4c565b60fc546101fe906001600160a01b031681565b6033546001600160a01b03166101fe565b6101de610b82565b610229610363366004611cb3565b610b91565b61022f610376366004611cf1565b610ba0565b610229610389366004611da9565b610c53565b6101de61039c366004611ae4565b610c85565b6101c16103af366004611e29565b6001600160a01b039182166000908152609c6020908152604080832093909416825291909152205460ff1690565b6102296103eb366004611b7f565b610d60565b60006001600160e01b0319821663780e9d6360e01b1480610415575061041582610df8565b92915050565b60606097805461042a90611e57565b80601f016020809104026020016040519081016040528092919081815260200182805461045690611e57565b80156104a35780601f10610478576101008083540402835291602001916104a3565b820191906000526020600020905b81548152906001019060200180831161048657829003601f168201915b5050505050905090565b6000818152609960205260408120546001600160a01b031661052b5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152609b60205260409020546001600160a01b031690565b6000610552826109d1565b9050806001600160a01b0316836001600160a01b031614156105c05760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610522565b336001600160a01b03821614806105dc57506105dc81336103af565b61064e5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610522565b6106588383610e48565b505050565b610668335b82610eb6565b6106845760405162461bcd60e51b815260040161052290611e92565b610658838383610fad565b6033546000906001600160a01b031633146106bc5760405162461bcd60e51b815260040161052290611ee3565b5060cb5460005b828110156106f0576106de846106d98385611f2e565b611154565b806106e881611f46565b9150506106c3565b5092915050565b600061070283610ac5565b82106107645760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610522565b506001600160a01b0391909116600090815260c960209081526040808320938352929052205490565b60fc546000906001600160a01b031633146107a757600080fd5b5060cb546107b58282611154565b919050565b61065883838360405180602001604052806000815250610c53565b6107de33610662565b61082a5760405162461bcd60e51b815260206004820181905260248201527f63616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665646044820152606401610522565b6108338161116e565b50565b600054610100900460ff166108515760005460ff1615610855565b303b155b6108b85760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610522565b600054610100900460ff161580156108da576000805461ffff19166101011790555b6108e2611215565b83516108f59060fb9060208701906119ad565b5060fc80546001600160a01b038086166001600160a01b03199283161790925560fd8054928516929091169190911790558015610938576000805461ff00191690555b50505050565b600061094960cb5490565b82106109ac5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610522565b60cb82815481106109bf576109bf611f61565b90600052602060002001549050919050565b6000818152609960205260408120546001600160a01b0316806104155760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610522565b6000610a5c6033546001600160a01b031690565b6001600160a01b0316336001600160a01b03161480610a85575060fd546001600160a01b031633145b6107a75760405162461bcd60e51b81526020600482015260116024820152706f6e6c79206f776e6572206f722064616f60781b6044820152606401610522565b60006001600160a01b038216610b305760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610522565b506001600160a01b03166000908152609a602052604090205490565b6033546001600160a01b03163314610b765760405162461bcd60e51b815260040161052290611ee3565b610b806000611285565b565b60606098805461042a90611e57565b610b9c3383836112d7565b5050565b6033546000906001600160a01b03163314610bcd5760405162461bcd60e51b815260040161052290611ee3565b81835114610c095760405162461bcd60e51b8152602060048201526009602482015268696c6c20706172616d60b81b6044820152606401610522565b5060cb5460005b828110156106f057610c41848281518110610c2d57610c2d611f61565b602002602001015182846106d99190611f2e565b80610c4b81611f46565b915050610c10565b610c5d3383610eb6565b610c795760405162461bcd60e51b815260040161052290611e92565b610938848484846113a6565b6000818152609960205260409020546060906001600160a01b0316610d045760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610522565b6000610d0e6113d9565b90506000815111610d2e5760405180602001604052806000815250610d59565b80610d38846113e8565b604051602001610d49929190611f77565b6040516020818303038152906040525b9392505050565b6033546001600160a01b03163314610d8a5760405162461bcd60e51b815260040161052290611ee3565b6001600160a01b038116610def5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610522565b61083381611285565b60006001600160e01b031982166380ac58cd60e01b1480610e2957506001600160e01b03198216635b5e139f60e01b145b8061041557506301ffc9a760e01b6001600160e01b0319831614610415565b6000818152609b6020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610e7d826109d1565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152609960205260408120546001600160a01b0316610f2f5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610522565b6000610f3a836109d1565b9050806001600160a01b0316846001600160a01b03161480610f755750836001600160a01b0316610f6a846104ad565b6001600160a01b0316145b80610fa557506001600160a01b038082166000908152609c602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316610fc0826109d1565b6001600160a01b0316146110245760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610522565b6001600160a01b0382166110865760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610522565b6110918383836114e6565b61109c600082610e48565b6001600160a01b0383166000908152609a602052604081208054600192906110c5908490611fa6565b90915550506001600160a01b0382166000908152609a602052604081208054600192906110f3908490611f2e565b909155505060008181526099602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610b9c82826040518060200160405280600081525061159e565b6000611179826109d1565b9050611187816000846114e6565b611192600083610e48565b6001600160a01b0381166000908152609a602052604081208054600192906111bb908490611fa6565b909155505060008281526099602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600054610100900460ff166112805760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610522565b610b80335b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031614156113395760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610522565b6001600160a01b038381166000818152609c6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6113b1848484610fad565b6113bd848484846115d1565b6109385760405162461bcd60e51b815260040161052290611fbd565b606060fb805461042a90611e57565b60608161140c5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611436578061142081611f46565b915061142f9050600a83612025565b9150611410565b60008167ffffffffffffffff81111561145157611451611b9c565b6040519080825280601f01601f19166020018201604052801561147b576020820181803683370190505b5090505b8415610fa557611490600183611fa6565b915061149d600a86612039565b6114a8906030611f2e565b60f81b8183815181106114bd576114bd611f61565b60200101906001600160f81b031916908160001a9053506114df600a86612025565b945061147f565b6001600160a01b0383166115415761153c8160cb8054600083815260cc60205260408120829055600182018355919091527fa7ce836d032b2bf62b7e2097a8e0a6d8aeb35405ad15271e96d3b0188a1d06fb0155565b611564565b816001600160a01b0316836001600160a01b0316146115645761156483826116cf565b6001600160a01b03821661157b576106588161176c565b826001600160a01b0316826001600160a01b03161461065857610658828261181b565b6115a8838361185f565b6115b560008484846115d1565b6106585760405162461bcd60e51b815260040161052290611fbd565b60006001600160a01b0384163b156116c457604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061161590339089908890889060040161204d565b6020604051808303816000875af1925050508015611650575060408051601f3d908101601f1916820190925261164d9181019061208a565b60015b6116aa573d80801561167e576040519150601f19603f3d011682016040523d82523d6000602084013e611683565b606091505b5080516116a25760405162461bcd60e51b815260040161052290611fbd565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610fa5565b506001949350505050565b600060016116dc84610ac5565b6116e69190611fa6565b600083815260ca6020526040902054909150808214611739576001600160a01b038416600090815260c960209081526040808320858452825280832054848452818420819055835260ca90915290208190555b50600091825260ca602090815260408084208490556001600160a01b03909416835260c981528383209183525290812055565b60cb5460009061177e90600190611fa6565b600083815260cc602052604081205460cb80549394509092849081106117a6576117a6611f61565b906000526020600020015490508060cb83815481106117c7576117c7611f61565b600091825260208083209091019290925582815260cc909152604080822084905585825281205560cb8054806117ff576117ff6120a7565b6001900381819060005260206000200160009055905550505050565b600061182683610ac5565b6001600160a01b03909316600090815260c960209081526040808320868452825280832085905593825260ca9052919091209190915550565b6001600160a01b0382166118b55760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610522565b6000818152609960205260409020546001600160a01b03161561191a5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610522565b611926600083836114e6565b6001600160a01b0382166000908152609a6020526040812080546001929061194f908490611f2e565b909155505060008181526099602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b8280546119b990611e57565b90600052602060002090601f0160209004810192826119db5760008555611a21565b82601f106119f457805160ff1916838001178555611a21565b82800160010185558215611a21579182015b82811115611a21578251825591602001919060010190611a06565b50611a2d929150611a31565b5090565b5b80821115611a2d5760008155600101611a32565b6001600160e01b03198116811461083357600080fd5b600060208284031215611a6e57600080fd5b8135610d5981611a46565b60005b83811015611a94578181015183820152602001611a7c565b838111156109385750506000910152565b60008151808452611abd816020860160208601611a79565b601f01601f19169290920160200192915050565b602081526000610d596020830184611aa5565b600060208284031215611af657600080fd5b5035919050565b6001600160a01b038116811461083357600080fd5b60008060408385031215611b2557600080fd5b8235611b3081611afd565b946020939093013593505050565b600080600060608486031215611b5357600080fd5b8335611b5e81611afd565b92506020840135611b6e81611afd565b929592945050506040919091013590565b600060208284031215611b9157600080fd5b8135610d5981611afd565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611bdb57611bdb611b9c565b604052919050565b600067ffffffffffffffff831115611bfd57611bfd611b9c565b611c10601f8401601f1916602001611bb2565b9050828152838383011115611c2457600080fd5b828260208301376000602084830101529392505050565b600080600060608486031215611c5057600080fd5b833567ffffffffffffffff811115611c6757600080fd5b8401601f81018613611c7857600080fd5b611c8786823560208401611be3565b9350506020840135611c9881611afd565b91506040840135611ca881611afd565b809150509250925092565b60008060408385031215611cc657600080fd5b8235611cd181611afd565b915060208301358015158114611ce657600080fd5b809150509250929050565b60008060408385031215611d0457600080fd5b823567ffffffffffffffff80821115611d1c57600080fd5b818501915085601f830112611d3057600080fd5b8135602082821115611d4457611d44611b9c565b8160051b9250611d55818401611bb2565b8281529284018101928181019089851115611d6f57600080fd5b948201945b84861015611d995785359350611d8984611afd565b8382529482019490820190611d74565b9997909101359750505050505050565b60008060008060808587031215611dbf57600080fd5b8435611dca81611afd565b93506020850135611dda81611afd565b925060408501359150606085013567ffffffffffffffff811115611dfd57600080fd5b8501601f81018713611e0e57600080fd5b611e1d87823560208401611be3565b91505092959194509250565b60008060408385031215611e3c57600080fd5b8235611e4781611afd565b91506020830135611ce681611afd565b600181811c90821680611e6b57607f821691505b60208210811415611e8c57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115611f4157611f41611f18565b500190565b6000600019821415611f5a57611f5a611f18565b5060010190565b634e487b7160e01b600052603260045260246000fd5b60008351611f89818460208801611a79565b835190830190611f9d818360208801611a79565b01949350505050565b600082821015611fb857611fb8611f18565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b6000826120345761203461200f565b500490565b6000826120485761204861200f565b500690565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061208090830184611aa5565b9695505050505050565b60006020828403121561209c57600080fd5b8151610d5981611a46565b634e487b7160e01b600052603160045260246000fdfea264697066735822122010fedab8fa8c0e9a6c2117e970385f1eba6b306f793356eda5ed55a533a1c70a64736f6c634300080c0033";

type M4mNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: M4mNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class M4mNFT__factory extends ContractFactory {
  constructor(...args: M4mNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "M4mNFT";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<M4mNFT> {
    return super.deploy(overrides || {}) as Promise<M4mNFT>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): M4mNFT {
    return super.attach(address) as M4mNFT;
  }
  connect(signer: Signer): M4mNFT__factory {
    return super.connect(signer) as M4mNFT__factory;
  }
  static readonly contractName: "M4mNFT";
  public readonly contractName: "M4mNFT";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): M4mNFTInterface {
    return new utils.Interface(_abi) as M4mNFTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): M4mNFT {
    return new Contract(address, _abi, signerOrProvider) as M4mNFT;
  }
}
