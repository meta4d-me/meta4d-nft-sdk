/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { M4mDao, M4mDaoInterface } from "../M4mDao";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC721",
        name: "origin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "m4mTokenId",
        type: "uint256",
      },
    ],
    name: "ConvertToM4mNFT",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC721",
        name: "origin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "m4mTokenId",
        type: "uint256",
      },
    ],
    name: "Redeem",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC721",
        name: "nft",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "SetConvertibleList",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "convertRecord",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "origin",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "convertToM4mNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    name: "convertibleList",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IM4mNFT",
        name: "_m4mNFT",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "m4mNFT",
    outputs: [
      {
        internalType: "contract IM4mNFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "m4mTokenId",
        type: "uint256",
      },
      {
        internalType: "contract IERC721",
        name: "origin",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "nft",
        type: "address",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setConvertibleList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610af4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063be22f35e11610071578063be22f35e1461015f578063c068541f14610172578063c4d66de814610185578063d878016114610198578063f2fde38b146101ab578063fa19054a146101be57600080fd5b8063150b7a02146100ae578063715018a6146100ea57806388d0cafa146100f45780638da5cb5b14610107578063b8a058fe1461012c575b600080fd5b6100cc6100bc366004610837565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020015b60405180910390f35b6100f26101fb565b005b6100f2610102366004610917565b61023a565b6033546001600160a01b03165b6040516001600160a01b0390911681526020016100e1565b61014f61013a366004610943565b60976020526000908152604090205460ff1681565b60405190151581526020016100e1565b609854610114906001600160a01b031681565b6100f2610180366004610967565b6103a2565b6100f2610193366004610943565b61042f565b6100f26101a63660046109a5565b610514565b6100f26101b9366004610943565b6106c8565b61014f6101cc3660046109dd565b609960209081526000948552604080862082529385528385208152918452828420909152825290205460ff1681565b6033546001600160a01b0316331461022e5760405162461bcd60e51b815260040161022590610a25565b60405180910390fd5b6102386000610763565b565b604051632142170760e11b8152336004820152306024820152604481018290526001600160a01b038316906342842e0e90606401600060405180830381600087803b15801561028857600080fd5b505af115801561029c573d6000803e3d6000fd5b50506098546040516335313c2160e11b8152336004820152600093506001600160a01b039091169150636a627842906024016020604051808303816000875af11580156102ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103119190610a5a565b6000818152609960209081526040808320338085529083528184206001600160a01b038916808652908452828520888652845293829020805460ff19166001179055815190815291820192909252908101849052606081018290529091507fa24f03a00be68b18cc575757f35174a4777d40e14839913a42d8b56eb460039b906080015b60405180910390a1505050565b6033546001600160a01b031633146103cc5760405162461bcd60e51b815260040161022590610a25565b6001600160a01b038216600081815260976020908152604091829020805460ff19168515159081179091558251938452908301527f1922e8a0af2e5c11ae62b29f0916b049b7e95b88e79c2342e8c4f0b20d455c33910160405180910390a15050565b600054610100900460ff1661044a5760005460ff161561044e565b303b155b6104b15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610225565b600054610100900460ff161580156104d3576000805461ffff19166101011790555b6104db6107b5565b6104e36107e5565b609880546001600160a01b0319166001600160a01b0384161790558015610510576000805461ff00191690555b5050565b600083815260996020908152604080832033845282528083206001600160a01b0386168452825280832084845290915290205460ff166105825760405162461bcd60e51b81526020600482015260096024820152681b9bc81c9958dbdc9960ba1b6044820152606401610225565b604051632142170760e11b8152306004820152336024820152604481018290526001600160a01b038316906342842e0e90606401600060405180830381600087803b1580156105d057600080fd5b505af11580156105e4573d6000803e3d6000fd5b5050609854604051630852cd8d60e31b8152600481018590526001600160a01b0390911692506342966c689150602401600060405180830381600087803b15801561062e57600080fd5b505af1158015610642573d6000803e3d6000fd5b5050506000848152609960209081526040808320338085529083528184206001600160a01b038816808652908452828520878652845293829020805460ff19169055815190815291820192909252908101839052606081018590527f3f693fff038bb8a046aa76d9516190ac7444f7d69cf952c4cbdc086fdef2d6fc9150608001610395565b6033546001600160a01b031633146106f25760405162461bcd60e51b815260040161022590610a25565b6001600160a01b0381166107575760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610225565b61076081610763565b50565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166107dc5760405162461bcd60e51b815260040161022590610a73565b61023833610763565b600054610100900460ff166102385760405162461bcd60e51b815260040161022590610a73565b6001600160a01b038116811461076057600080fd5b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561084d57600080fd5b84356108588161080c565b935060208501356108688161080c565b925060408501359150606085013567ffffffffffffffff8082111561088c57600080fd5b818701915087601f8301126108a057600080fd5b8135818111156108b2576108b2610821565b604051601f8201601f19908116603f011681019083821181831017156108da576108da610821565b816040528281528a60208487010111156108f357600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561092a57600080fd5b82356109358161080c565b946020939093013593505050565b60006020828403121561095557600080fd5b81356109608161080c565b9392505050565b6000806040838503121561097a57600080fd5b82356109858161080c565b91506020830135801515811461099a57600080fd5b809150509250929050565b6000806000606084860312156109ba57600080fd5b8335925060208401356109cc8161080c565b929592945050506040919091013590565b600080600080608085870312156109f357600080fd5b843593506020850135610a058161080c565b92506040850135610a158161080c565b9396929550929360600135925050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610a6c57600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea2646970667358221220ec79918cec500cbc43eed14b3b4300c30032e3ab55cde99d38bc1fd55d971c0164736f6c634300080c0033";

type M4mDaoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: M4mDaoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class M4mDao__factory extends ContractFactory {
  constructor(...args: M4mDaoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "M4mDao";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<M4mDao> {
    return super.deploy(overrides || {}) as Promise<M4mDao>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): M4mDao {
    return super.attach(address) as M4mDao;
  }
  connect(signer: Signer): M4mDao__factory {
    return super.connect(signer) as M4mDao__factory;
  }
  static readonly contractName: "M4mDao";
  public readonly contractName: "M4mDao";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): M4mDaoInterface {
    return new utils.Interface(_abi) as M4mDaoInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): M4mDao {
    return new Contract(address, _abi, signerOrProvider) as M4mDao;
  }
}
