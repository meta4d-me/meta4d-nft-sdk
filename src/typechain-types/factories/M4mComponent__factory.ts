/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { M4mComponent, M4mComponentInterface } from "../M4mComponent";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
      {
        internalType: "contract IM4mNFTRegistry",
        name: "_registry",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "prepareNewToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IM4mNFTRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612565806100206000396000f3fe608060405234801561001057600080fd5b50600436106101355760003560e01c8063715018a6116100b8578063bd85b0391161007c578063bd85b039146102a5578063d81d0a15146102c5578063e985e9c5146102d8578063f242432a14610314578063f2fde38b14610327578063f5298aca1461033a57600080fd5b8063715018a61461023b5780637ab4339d146102435780637b103999146102565780638da5cb5b14610281578063a22cb4651461029257600080fd5b8063156e29f6116100ff578063156e29f6146101cf5780632eb2c2d6146101e25780634e1273f4146101f55780634e41a1fb146102155780636b20c4541461022857600080fd5b8062ad800c1461013a578062fdd58e1461016357806301ffc9a7146101845780630577486d146101a75780630e89341c146101bc575b600080fd5b61014d610148366004611a33565b61034d565b60405161015a9190611a99565b60405180910390f35b610176610171366004611ac8565b6103e7565b60405190815260200161015a565b610197610192366004611b0a565b610480565b604051901515815260200161015a565b6101ba6101b5366004611bde565b6104d2565b005b61014d6101ca366004611a33565b610587565b6101ba6101dd366004611c4b565b61061b565b6101ba6101f0366004611d15565b6106b3565b610208610203366004611dc3565b61074a565b60405161015a9190611ecb565b61014d610223366004611a33565b610874565b6101ba610236366004611ede565b61088d565b6101ba61097a565b6101ba610251366004611f4a565b6109b0565b60cc54610269906001600160a01b031681565b6040516001600160a01b03909116815260200161015a565b6097546001600160a01b0316610269565b6101ba6102a0366004611f9c565b610a96565b6101766102b3366004611a33565b60cb6020526000908152604090205481565b6101ba6102d3366004611ede565b610aa5565b6101976102e6366004611fcf565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205460ff1690565b6101ba610322366004611ffd565b610ba6565b6101ba610335366004612066565b610c2d565b6101ba610348366004611c4b565b610cc8565b60c9602052600090815260409020805461036690612083565b80601f016020809104026020016040519081016040528092919081815260200182805461039290612083565b80156103df5780601f106103b4576101008083540402835291602001916103df565b820191906000526020600020905b8154815290600101906020018083116103c257829003601f168201915b505050505081565b60006001600160a01b0383166104585760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b5060009081526065602090815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806104b157506001600160e01b031982166303a24d0760e21b145b806104cc57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6097546001600160a01b031633146104fc5760405162461bcd60e51b815260040161044f906120be565b600083815260cb6020526040902054156105425760405162461bcd60e51b8152602060048201526007602482015266195e1a5cdd195960ca1b604482015260640161044f565b600083815260c96020908152604090912083516105619285019061199a565b50600083815260ca6020908152604090912082516105819284019061199a565b50505050565b60606067805461059690612083565b80601f01602080910402602001604051908101604052809291908181526020018280546105c290612083565b801561060f5780601f106105e45761010080835404028352916020019161060f565b820191906000526020600020905b8154815290600101906020018083116105f257829003601f168201915b50505050509050919050565b60cc546001600160a01b031633146106655760405162461bcd60e51b815260206004820152600d60248201526c6f6e6c7920726567697374727960981b604482015260640161044f565b61066e82610d5f565b600082815260cb60205260408120805483929061068c908490612109565b925050819055506106ae83838360405180602001604052806000815250610e33565b505050565b6001600160a01b0385163314806106cf57506106cf85336102e6565b6107365760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b606482015260840161044f565b6107438585858585610f05565b5050505050565b606081518351146107af5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b606482015260840161044f565b6000835167ffffffffffffffff8111156107cb576107cb611b27565b6040519080825280602002602001820160405280156107f4578160200160208202803683370190505b50905060005b845181101561086c5761083f85828151811061081857610818612121565b602002602001015185838151811061083257610832612121565b60200260200101516103e7565b82828151811061085157610851612121565b602090810291909101015261086581612137565b90506107fa565b509392505050565b60ca602052600090815260409020805461036690612083565b6001600160a01b0383163314806108a957506108a983336102e6565b6108f55760405162461bcd60e51b815260206004820181905260248201527f63616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564604482015260640161044f565b60005b815181101561096e5781818151811061091357610913612121565b602002602001015160cb600085848151811061093157610931612121565b6020026020010151815260200190815260200160002060008282546109569190612152565b9091555081905061096681612137565b9150506108f8565b506106ae8383836110a4565b6097546001600160a01b031633146109a45760405162461bcd60e51b815260040161044f906120be565b6109ae6000611223565b565b600054610100900460ff166109cb5760005460ff16156109cf565b303b155b610a325760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161044f565b600054610100900460ff16158015610a54576000805461ffff19166101011790555b610a5d83611275565b610a656112a5565b60cc80546001600160a01b0319166001600160a01b03841617905580156106ae576000805461ff0019169055505050565b610aa13383836112d5565b5050565b60cc546001600160a01b03163314610aef5760405162461bcd60e51b815260206004820152600d60248201526c6f6e6c7920726567697374727960981b604482015260640161044f565b60005b8251811015610b8a57610b1d838281518110610b1057610b10612121565b6020026020010151610d5f565b818181518110610b2f57610b2f612121565b602002602001015160cb6000858481518110610b4d57610b4d612121565b602002602001015181526020019081526020016000206000828254610b729190612109565b90915550819050610b8281612137565b915050610af2565b506106ae838383604051806020016040528060008152506113b6565b6001600160a01b038516331480610bc25750610bc285336102e6565b610c205760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b606482015260840161044f565b6107438585858585611502565b6097546001600160a01b03163314610c575760405162461bcd60e51b815260040161044f906120be565b6001600160a01b038116610cbc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161044f565b610cc581611223565b50565b6001600160a01b038316331480610ce45750610ce483336102e6565b610d305760405162461bcd60e51b815260206004820181905260248201527f63616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564604482015260640161044f565b600082815260cb602052604081208054839290610d4e908490612152565b909155506106ae9050838383611623565b600081815260c9602052604081208054610d7890612083565b80601f0160208091040260200160405190810160405280929190818152602001828054610da490612083565b8015610df15780601f10610dc657610100808354040283529160200191610df1565b820191906000526020600020905b815481529060010190602001808311610dd457829003601f168201915b505050505090506000815111610aa15760405162461bcd60e51b815260206004820152600760248201526637379030ba3a3960c91b604482015260640161044f565b6001600160a01b038416610e595760405162461bcd60e51b815260040161044f90612169565b33610e7381600087610e6a88611729565b61074388611729565b60008481526065602090815260408083206001600160a01b038916845290915281208054859290610ea5908490612109565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461074381600087878787611774565b8151835114610f265760405162461bcd60e51b815260040161044f906121aa565b6001600160a01b038416610f4c5760405162461bcd60e51b815260040161044f906121f2565b3360005b8451811015611036576000858281518110610f6d57610f6d612121565b602002602001015190506000858381518110610f8b57610f8b612121565b60209081029190910181015160008481526065835260408082206001600160a01b038e168352909352919091205490915081811015610fdc5760405162461bcd60e51b815260040161044f90612237565b60008381526065602090815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061101b908490612109565b925050819055505050508061102f90612137565b9050610f50565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611086929190612281565b60405180910390a461109c8187878787876118d0565b505050505050565b6001600160a01b0383166110ca5760405162461bcd60e51b815260040161044f906122af565b80518251146110eb5760405162461bcd60e51b815260040161044f906121aa565b604080516020810190915260009081905233905b83518110156111c457600084828151811061111c5761111c612121565b60200260200101519050600084838151811061113a5761113a612121565b60209081029190910181015160008481526065835260408082206001600160a01b038c16835290935291909120549091508181101561118b5760405162461bcd60e51b815260040161044f906122f2565b60009283526065602090815260408085206001600160a01b038b16865290915290922091039055806111bc81612137565b9150506110ff565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051611215929190612281565b60405180910390a450505050565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1661129c5760405162461bcd60e51b815260040161044f90612336565b610cc58161198b565b600054610100900460ff166112cc5760405162461bcd60e51b815260040161044f90612336565b6109ae33611223565b816001600160a01b0316836001600160a01b031614156113495760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b606482015260840161044f565b6001600160a01b03838116600081815260666020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166113dc5760405162461bcd60e51b815260040161044f90612169565b81518351146113fd5760405162461bcd60e51b815260040161044f906121aa565b3360005b845181101561149a5783818151811061141c5761141c612121565b60200260200101516065600087848151811061143a5761143a612121565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b0316815260200190815260200160002060008282546114829190612109565b9091555081905061149281612137565b915050611401565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516114eb929190612281565b60405180910390a4610743816000878787876118d0565b6001600160a01b0384166115285760405162461bcd60e51b815260040161044f906121f2565b33611538818787610e6a88611729565b60008481526065602090815260408083206001600160a01b038a1684529091529020548381101561157b5760405162461bcd60e51b815260040161044f90612237565b60008581526065602090815260408083206001600160a01b038b81168552925280832087850390559088168252812080548692906115ba908490612109565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461161a828888888888611774565b50505050505050565b6001600160a01b0383166116495760405162461bcd60e51b815260040161044f906122af565b336116798185600061165a87611729565b61166387611729565b5050604080516020810190915260009052505050565b60008381526065602090815260408083206001600160a01b0388168452909152902054828110156116bc5760405162461bcd60e51b815260040161044f906122f2565b60008481526065602090815260408083206001600160a01b03898116808652918452828520888703905582518981529384018890529092908616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061176357611763612121565b602090810291909101015292915050565b6001600160a01b0384163b1561109c5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906117b89089908990889088908890600401612381565b6020604051808303816000875af19250505080156117f3575060408051601f3d908101601f191682019092526117f0918101906123c6565b60015b6118a0576117ff6123e3565b806308c379a0141561183957506118146123ff565b8061181f575061183b565b8060405162461bcd60e51b815260040161044f9190611a99565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b606482015260840161044f565b6001600160e01b0319811663f23a6e6160e01b1461161a5760405162461bcd60e51b815260040161044f90612489565b6001600160a01b0384163b1561109c5760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061191490899089908890889088906004016124d1565b6020604051808303816000875af192505050801561194f575060408051601f3d908101601f1916820190925261194c918101906123c6565b60015b61195b576117ff6123e3565b6001600160e01b0319811663bc197c8160e01b1461161a5760405162461bcd60e51b815260040161044f90612489565b8051610aa19060679060208401905b8280546119a690612083565b90600052602060002090601f0160209004810192826119c85760008555611a0e565b82601f106119e157805160ff1916838001178555611a0e565b82800160010185558215611a0e579182015b82811115611a0e5782518255916020019190600101906119f3565b50611a1a929150611a1e565b5090565b5b80821115611a1a5760008155600101611a1f565b600060208284031215611a4557600080fd5b5035919050565b6000815180845260005b81811015611a7257602081850181015186830182015201611a56565b81811115611a84576000602083870101525b50601f01601f19169290920160200192915050565b602081526000611aac6020830184611a4c565b9392505050565b6001600160a01b0381168114610cc557600080fd5b60008060408385031215611adb57600080fd5b8235611ae681611ab3565b946020939093013593505050565b6001600160e01b031981168114610cc557600080fd5b600060208284031215611b1c57600080fd5b8135611aac81611af4565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715611b6357611b63611b27565b6040525050565b600082601f830112611b7b57600080fd5b813567ffffffffffffffff811115611b9557611b95611b27565b604051611bac601f8301601f191660200182611b3d565b818152846020838601011115611bc157600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215611bf357600080fd5b83359250602084013567ffffffffffffffff80821115611c1257600080fd5b611c1e87838801611b6a565b93506040860135915080821115611c3457600080fd5b50611c4186828701611b6a565b9150509250925092565b600080600060608486031215611c6057600080fd5b8335611c6b81611ab3565b95602085013595506040909401359392505050565b600067ffffffffffffffff821115611c9a57611c9a611b27565b5060051b60200190565b600082601f830112611cb557600080fd5b81356020611cc282611c80565b604051611ccf8282611b3d565b83815260059390931b8501820192828101915086841115611cef57600080fd5b8286015b84811015611d0a5780358352918301918301611cf3565b509695505050505050565b600080600080600060a08688031215611d2d57600080fd5b8535611d3881611ab3565b94506020860135611d4881611ab3565b9350604086013567ffffffffffffffff80821115611d6557600080fd5b611d7189838a01611ca4565b94506060880135915080821115611d8757600080fd5b611d9389838a01611ca4565b93506080880135915080821115611da957600080fd5b50611db688828901611b6a565b9150509295509295909350565b60008060408385031215611dd657600080fd5b823567ffffffffffffffff80821115611dee57600080fd5b818501915085601f830112611e0257600080fd5b81356020611e0f82611c80565b604051611e1c8282611b3d565b83815260059390931b8501820192828101915089841115611e3c57600080fd5b948201945b83861015611e63578535611e5481611ab3565b82529482019490820190611e41565b96505086013592505080821115611e7957600080fd5b50611e8685828601611ca4565b9150509250929050565b600081518084526020808501945080840160005b83811015611ec057815187529582019590820190600101611ea4565b509495945050505050565b602081526000611aac6020830184611e90565b600080600060608486031215611ef357600080fd5b8335611efe81611ab3565b9250602084013567ffffffffffffffff80821115611f1b57600080fd5b611f2787838801611ca4565b93506040860135915080821115611f3d57600080fd5b50611c4186828701611ca4565b60008060408385031215611f5d57600080fd5b823567ffffffffffffffff811115611f7457600080fd5b611f8085828601611b6a565b9250506020830135611f9181611ab3565b809150509250929050565b60008060408385031215611faf57600080fd5b8235611fba81611ab3565b915060208301358015158114611f9157600080fd5b60008060408385031215611fe257600080fd5b8235611fed81611ab3565b91506020830135611f9181611ab3565b600080600080600060a0868803121561201557600080fd5b853561202081611ab3565b9450602086013561203081611ab3565b93506040860135925060608601359150608086013567ffffffffffffffff81111561205a57600080fd5b611db688828901611b6a565b60006020828403121561207857600080fd5b8135611aac81611ab3565b600181811c9082168061209757607f821691505b602082108114156120b857634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000821982111561211c5761211c6120f3565b500190565b634e487b7160e01b600052603260045260246000fd5b600060001982141561214b5761214b6120f3565b5060010190565b600082821015612164576121646120f3565b500390565b60208082526021908201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b6040815260006122946040830185611e90565b82810360208401526122a68185611e90565b95945050505050565b60208082526023908201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526024908201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604082015263616e636560e01b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906123bb90830184611a4c565b979650505050505050565b6000602082840312156123d857600080fd5b8151611aac81611af4565b600060033d11156123fc5760046000803e5060005160e01c5b90565b600060443d101561240d5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561243d57505050505090565b82850191508151818111156124555750505050505090565b843d870101602082850101111561246f5750505050505090565b61247e60208286010187611b3d565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b0386811682528516602082015260a0604082018190526000906124fd90830186611e90565b828103606084015261250f8186611e90565b905082810360808401526125238185611a4c565b9897505050505050505056fea264697066735822122015d73cc1168518190f0746599a0826eeb078aae8017a800c110c33d29ef7444b64736f6c634300080c0033";

type M4mComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: M4mComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class M4mComponent__factory extends ContractFactory {
  constructor(...args: M4mComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "M4mComponent";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<M4mComponent> {
    return super.deploy(overrides || {}) as Promise<M4mComponent>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): M4mComponent {
    return super.attach(address) as M4mComponent;
  }
  connect(signer: Signer): M4mComponent__factory {
    return super.connect(signer) as M4mComponent__factory;
  }
  static readonly contractName: "M4mComponent";
  public readonly contractName: "M4mComponent";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): M4mComponentInterface {
    return new utils.Interface(_abi) as M4mComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): M4mComponent {
    return new Contract(address, _abi, signerOrProvider) as M4mComponent;
  }
}
