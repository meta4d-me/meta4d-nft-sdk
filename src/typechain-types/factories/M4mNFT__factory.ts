/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { M4mNFT, M4mNFTInterface } from "../M4mNFT";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "__baseURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "updateBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506120f6806100206000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80634f6ccce7116100b8578063931688cb1161007c578063931688cb1461028957806395d89b411461029c578063a22cb465146102a4578063b88d4fde146102b7578063c87b56dd146102ca578063e985e9c5146102dd57600080fd5b80634f6ccce71461022a5780636352211e1461023d57806370a08231146102505780637ab4339d146102635780637b1039991461027657600080fd5b806323b872dd116100ff57806323b872dd146101cb5780632f745c59146101de57806340c10f19146101f157806342842e0e1461020457806342966c681461021757600080fd5b806301ffc9a71461013c57806306fdde0314610164578063081812fc14610179578063095ea7b3146101a457806318160ddd146101b9575b600080fd5b61014f61014a3660046119cf565b610319565b60405190151581526020015b60405180910390f35b61016c610344565b60405161015b9190611a44565b61018c610187366004611a57565b6103d6565b6040516001600160a01b03909116815260200161015b565b6101b76101b2366004611a85565b610470565b005b6099545b60405190815260200161015b565b6101b76101d9366004611ab1565b610586565b6101bd6101ec366004611a85565b6105b7565b6101b76101ff366004611a85565b61064d565b6101b7610212366004611ab1565b6106a4565b6101b7610225366004611a57565b6106bf565b6101bd610238366004611a57565b610714565b61018c61024b366004611a57565b6107a7565b6101bd61025e366004611af2565b61081e565b6101b7610271366004611bbb565b6108a5565b60ca5461018c906001600160a01b031681565b6101b7610297366004611c0d565b610996565b61016c6109a9565b6101b76102b2366004611c42565b6109b8565b6101b76102c5366004611c75565b6109c3565b61016c6102d8366004611a57565b6109fb565b61014f6102eb366004611cf5565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b60006001600160e01b0319821663780e9d6360e01b148061033e575061033e82610ad6565b92915050565b60606065805461035390611d23565b80601f016020809104026020016040519081016040528092919081815260200182805461037f90611d23565b80156103cc5780601f106103a1576101008083540402835291602001916103cc565b820191906000526020600020905b8154815290600101906020018083116103af57829003601f168201915b5050505050905090565b6000818152606760205260408120546001600160a01b03166104545760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b600061047b826107a7565b9050806001600160a01b0316836001600160a01b031614156104e95760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161044b565b336001600160a01b0382161480610505575061050581336102eb565b6105775760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161044b565b6105818383610b26565b505050565b6105903382610b94565b6105ac5760405162461bcd60e51b815260040161044b90611d5e565b610581838383610c8b565b60006105c28361081e565b82106106245760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b606482015260840161044b565b506001600160a01b03919091166000908152609760209081526040808320938352929052205490565b60ca546001600160a01b031633146106965760405162461bcd60e51b815260206004820152600c60248201526b696c6c20726567697374727960a01b604482015260640161044b565b6106a08282610e32565b5050565b610581838383604051806020016040528060008152506109c3565b60ca546001600160a01b031633146107085760405162461bcd60e51b815260206004820152600c60248201526b696c6c20726567697374727960a01b604482015260640161044b565b61071181610e4c565b50565b600061071f60995490565b82106107825760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b606482015260840161044b565b6099828154811061079557610795611daf565b90600052602060002001549050919050565b6000818152606760205260408120546001600160a01b03168061033e5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161044b565b60006001600160a01b0382166108895760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161044b565b506001600160a01b031660009081526068602052604090205490565b600054610100900460ff166108c05760005460ff16156108c4565b303b155b6109275760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161044b565b600054610100900460ff16158015610949576000805461ffff19166101011790555b610951610ef3565b82516109649060c9906020860190611920565b5060ca80546001600160a01b0319166001600160a01b0384161790558015610581576000805461ff0019169055505050565b80516106a09060c9906020840190611920565b60606066805461035390611d23565b6106a0338383610f60565b6109cd3383610b94565b6109e95760405162461bcd60e51b815260040161044b90611d5e565b6109f58484848461102f565b50505050565b6000818152606760205260409020546060906001600160a01b0316610a7a5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161044b565b6000610a84611062565b90506000815111610aa45760405180602001604052806000815250610acf565b80610aae84611094565b604051602001610abf929190611de1565b6040516020818303038152906040525b9392505050565b60006001600160e01b031982166380ac58cd60e01b1480610b0757506001600160e01b03198216635b5e139f60e01b145b8061033e57506301ffc9a760e01b6001600160e01b031983161461033e565b600081815260696020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610b5b826107a7565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152606760205260408120546001600160a01b0316610c0d5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161044b565b6000610c18836107a7565b9050806001600160a01b0316846001600160a01b03161480610c535750836001600160a01b0316610c48846103d6565b6001600160a01b0316145b80610c8357506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316610c9e826107a7565b6001600160a01b031614610d025760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161044b565b6001600160a01b038216610d645760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161044b565b610d6f838383611192565b610d7a600082610b26565b6001600160a01b0383166000908152606860205260408120805460019290610da3908490611e26565b90915550506001600160a01b0382166000908152606860205260408120805460019290610dd1908490611e3d565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6106a0828260405180602001604052806000815250611269565b6000610e57826107a7565b9050610e6581600084611192565b610e70600083610b26565b6001600160a01b0381166000908152606860205260408120805460019290610e99908490611e26565b909155505060008281526067602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600054610100900460ff16610f5e5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161044b565b565b816001600160a01b0316836001600160a01b03161415610fc25760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161044b565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61103a848484610c8b565b6110468484848461129c565b6109f55760405162461bcd60e51b815260040161044b90611e55565b606060c961106f3061139a565b604051602001611080929190611ea7565b604051602081830303815290604052905090565b6060816110b85750506040805180820190915260018152600360fc1b602082015290565b8160005b81156110e257806110cc81611f5e565b91506110db9050600a83611f8f565b91506110bc565b60008167ffffffffffffffff8111156110fd576110fd611b0f565b6040519080825280601f01601f191660200182016040528015611127576020820181803683370190505b5090505b8415610c835761113c600183611e26565b9150611149600a86611fa3565b611154906030611e3d565b60f81b81838151811061116957611169611daf565b60200101906001600160f81b031916908160001a90535061118b600a86611f8f565b945061112b565b61119d8383836113ee565b60ca546040516323c1f0ad60e21b8152600481018390526000916001600160a01b031690638f07c2b490602401608060405180830381865afa1580156111e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120b9190611fb7565b509192506002915061121a9050565b81600381111561122c5761122c612004565b14156109f55760405162461bcd60e51b815260206004820152600c60248201526b1d1bdad95b881b1bd8dad95960a21b604482015260640161044b565b61127383836114a6565b611280600084848461129c565b6105815760405162461bcd60e51b815260040161044b90611e55565b60006001600160a01b0384163b1561138f57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906112e090339089908890889060040161201a565b6020604051808303816000875af192505050801561131b575060408051601f3d908101601f1916820190925261131891810190612057565b60015b611375573d808015611349576040519150601f19603f3d011682016040523d82523d6000602084013e61134e565b606091505b50805161136d5760405162461bcd60e51b815260040161044b90611e55565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610c83565b506001949350505050565b6060816113c15750506040805180820190915260048152630307830360e41b602082015290565b8160005b81156113e457806113d581611f5e565b915050600882901c91506113c5565b610c8384826115f4565b6001600160a01b0383166114495761144481609980546000838152609a60205260408120829055600182018355919091527f72a152ddfb8e864297c917af52ea6c1c68aead0fee1a62673fcc7e0c94979d000155565b61146c565b816001600160a01b0316836001600160a01b03161461146c5761146c8382611790565b6001600160a01b038216611483576105818161182d565b826001600160a01b0316826001600160a01b0316146105815761058182826118dc565b6001600160a01b0382166114fc5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161044b565b6000818152606760205260409020546001600160a01b0316156115615760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161044b565b61156d60008383611192565b6001600160a01b0382166000908152606860205260408120805460019290611596908490611e3d565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60606000611603836002612074565b61160e906002611e3d565b67ffffffffffffffff81111561162657611626611b0f565b6040519080825280601f01601f191660200182016040528015611650576020820181803683370190505b509050600360fc1b8160008151811061166b5761166b611daf565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061169a5761169a611daf565b60200101906001600160f81b031916908160001a90535060006116be846002612074565b6116c9906001611e3d565b90505b6001811115611741576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106116fd576116fd611daf565b1a60f81b82828151811061171357611713611daf565b60200101906001600160f81b031916908160001a90535060049490941c9361173a81612093565b90506116cc565b508315610acf5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161044b565b6000600161179d8461081e565b6117a79190611e26565b6000838152609860205260409020549091508082146117fa576001600160a01b03841660009081526097602090815260408083208584528252808320548484528184208190558352609890915290208190555b5060009182526098602090815260408084208490556001600160a01b039094168352609781528383209183525290812055565b60995460009061183f90600190611e26565b6000838152609a60205260408120546099805493945090928490811061186757611867611daf565b90600052602060002001549050806099838154811061188857611888611daf565b6000918252602080832090910192909255828152609a909152604080822084905585825281205560998054806118c0576118c06120aa565b6001900381819060005260206000200160009055905550505050565b60006118e78361081e565b6001600160a01b039093166000908152609760209081526040808320868452825280832085905593825260989052919091209190915550565b82805461192c90611d23565b90600052602060002090601f01602090048101928261194e5760008555611994565b82601f1061196757805160ff1916838001178555611994565b82800160010185558215611994579182015b82811115611994578251825591602001919060010190611979565b506119a09291506119a4565b5090565b5b808211156119a057600081556001016119a5565b6001600160e01b03198116811461071157600080fd5b6000602082840312156119e157600080fd5b8135610acf816119b9565b60005b83811015611a075781810151838201526020016119ef565b838111156109f55750506000910152565b60008151808452611a308160208601602086016119ec565b601f01601f19169290920160200192915050565b602081526000610acf6020830184611a18565b600060208284031215611a6957600080fd5b5035919050565b6001600160a01b038116811461071157600080fd5b60008060408385031215611a9857600080fd5b8235611aa381611a70565b946020939093013593505050565b600080600060608486031215611ac657600080fd5b8335611ad181611a70565b92506020840135611ae181611a70565b929592945050506040919091013590565b600060208284031215611b0457600080fd5b8135610acf81611a70565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611b4057611b40611b0f565b604051601f8501601f19908116603f01168101908282118183101715611b6857611b68611b0f565b81604052809350858152868686011115611b8157600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112611bac57600080fd5b610acf83833560208501611b25565b60008060408385031215611bce57600080fd5b823567ffffffffffffffff811115611be557600080fd5b611bf185828601611b9b565b9250506020830135611c0281611a70565b809150509250929050565b600060208284031215611c1f57600080fd5b813567ffffffffffffffff811115611c3657600080fd5b610c8384828501611b9b565b60008060408385031215611c5557600080fd5b8235611c6081611a70565b915060208301358015158114611c0257600080fd5b60008060008060808587031215611c8b57600080fd5b8435611c9681611a70565b93506020850135611ca681611a70565b925060408501359150606085013567ffffffffffffffff811115611cc957600080fd5b8501601f81018713611cda57600080fd5b611ce987823560208401611b25565b91505092959194509250565b60008060408385031215611d0857600080fd5b8235611d1381611a70565b91506020830135611c0281611a70565b600181811c90821680611d3757607f821691505b60208210811415611d5857634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b60008151611dd78185602086016119ec565b9290920192915050565b60008351611df38184602088016119ec565b835190830190611e078183602088016119ec565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b600082821015611e3857611e38611e10565b500390565b60008219821115611e5057611e50611e10565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600080845481600182811c915080831680611ec357607f831692505b6020808410821415611ee357634e487b7160e01b86526022600452602486fd5b818015611ef75760018114611f0857611f35565b60ff19861689528489019650611f35565b60008b81526020902060005b86811015611f2d5781548b820152908501908301611f14565b505084890196505b505050505050611f55611f488286611dc5565b602f60f81b815260010190565b95945050505050565b6000600019821415611f7257611f72611e10565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611f9e57611f9e611f79565b500490565b600082611fb257611fb2611f79565b500690565b60008060008060808587031215611fcd57600080fd5b845160048110611fdc57600080fd5b602086015160408701519195509350611ff481611a70565b6060959095015193969295505050565b634e487b7160e01b600052602160045260246000fd5b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061204d90830184611a18565b9695505050505050565b60006020828403121561206957600080fd5b8151610acf816119b9565b600081600019048311821515161561208e5761208e611e10565b500290565b6000816120a2576120a2611e10565b506000190190565b634e487b7160e01b600052603160045260246000fdfea26469706673582212203cdcbd13cbadcd18454e0d2d162eee80c01d994ff7f80f9511db2c6ee652f66f64736f6c634300080c0033";

type M4mNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: M4mNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class M4mNFT__factory extends ContractFactory {
  constructor(...args: M4mNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "M4mNFT";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<M4mNFT> {
    return super.deploy(overrides || {}) as Promise<M4mNFT>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): M4mNFT {
    return super.attach(address) as M4mNFT;
  }
  connect(signer: Signer): M4mNFT__factory {
    return super.connect(signer) as M4mNFT__factory;
  }
  static readonly contractName: "M4mNFT";
  public readonly contractName: "M4mNFT";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): M4mNFTInterface {
    return new utils.Interface(_abi) as M4mNFTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): M4mNFT {
    return new Contract(address, _abi, signerOrProvider) as M4mNFT;
  }
}
